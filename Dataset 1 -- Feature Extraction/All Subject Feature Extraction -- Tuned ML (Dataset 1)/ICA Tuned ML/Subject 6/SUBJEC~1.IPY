{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "f9e9d302",
   "metadata": {},
   "source": [
    "# Importing Libraries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8981c1e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import confusion_matrix, f1_score, accuracy_score, classification_report"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8bfa8885",
   "metadata": {},
   "source": [
    "# Exploratory Data Analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ff1116c8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Emg1</th>\n",
       "      <th>Emg2</th>\n",
       "      <th>Emg3</th>\n",
       "      <th>Emg4</th>\n",
       "      <th>Emg5</th>\n",
       "      <th>Emg6</th>\n",
       "      <th>Emg7</th>\n",
       "      <th>Emg8</th>\n",
       "      <th>Emg9</th>\n",
       "      <th>Emg10</th>\n",
       "      <th>repetition</th>\n",
       "      <th>rerepetition</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>restimulus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>61929</th>\n",
       "      <td>0.0122</td>\n",
       "      <td>0.0659</td>\n",
       "      <td>0.2148</td>\n",
       "      <td>0.0293</td>\n",
       "      <td>0.0464</td>\n",
       "      <td>0.2441</td>\n",
       "      <td>1.0571</td>\n",
       "      <td>0.7910</td>\n",
       "      <td>0.6616</td>\n",
       "      <td>0.2710</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25103</th>\n",
       "      <td>0.0073</td>\n",
       "      <td>0.0610</td>\n",
       "      <td>0.0098</td>\n",
       "      <td>0.0220</td>\n",
       "      <td>0.0513</td>\n",
       "      <td>0.1880</td>\n",
       "      <td>2.1509</td>\n",
       "      <td>0.4834</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.5859</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45311</th>\n",
       "      <td>0.0146</td>\n",
       "      <td>0.0781</td>\n",
       "      <td>0.0171</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0098</td>\n",
       "      <td>0.7520</td>\n",
       "      <td>0.1733</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0366</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446875</th>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.8398</td>\n",
       "      <td>0.5688</td>\n",
       "      <td>0.0952</td>\n",
       "      <td>0.1685</td>\n",
       "      <td>0.2441</td>\n",
       "      <td>1.4453</td>\n",
       "      <td>3.6963</td>\n",
       "      <td>0.3247</td>\n",
       "      <td>0.6641</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>23</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>383328</th>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.2075</td>\n",
       "      <td>0.0195</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0488</td>\n",
       "      <td>0.0146</td>\n",
       "      <td>0.0879</td>\n",
       "      <td>0.6543</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Emg1    Emg2    Emg3    Emg4    Emg5    Emg6    Emg7    Emg8  \\\n",
       "61929   0.0122  0.0659  0.2148  0.0293  0.0464  0.2441  1.0571  0.7910   \n",
       "25103   0.0073  0.0610  0.0098  0.0220  0.0513  0.1880  2.1509  0.4834   \n",
       "45311   0.0146  0.0781  0.0171  0.0024  0.0024  0.0098  0.7520  0.1733   \n",
       "446875  0.0024  0.8398  0.5688  0.0952  0.1685  0.2441  1.4453  3.6963   \n",
       "383328  0.0024  0.0024  0.2075  0.0195  0.0024  0.0488  0.0146  0.0879   \n",
       "\n",
       "          Emg9   Emg10  repetition  rerepetition  stimulus  restimulus  \n",
       "61929   0.6616  0.2710           4             4         8           8  \n",
       "25103   0.0024  0.5859          10            10         3           3  \n",
       "45311   0.0024  0.0366           4             0         6           0  \n",
       "446875  0.3247  0.6641           7             7        23          23  \n",
       "383328  0.6543  0.0024           6             6        16          16  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data = pd.read_excel('Dataset 1 Patient 6.xlsx')\n",
    "raw_data.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "abaa902c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(453169, 14)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4c5eb0e0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Emg1', 'Emg2', 'Emg3', 'Emg4', 'Emg5', 'Emg6', 'Emg7', 'Emg8', 'Emg9',\n",
       "       'Emg10', 'repetition', 'rerepetition', 'stimulus', 'restimulus'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "4154dd68",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 453169 entries, 0 to 453168\n",
      "Data columns (total 14 columns):\n",
      " #   Column        Non-Null Count   Dtype  \n",
      "---  ------        --------------   -----  \n",
      " 0   Emg1          453169 non-null  float64\n",
      " 1   Emg2          453169 non-null  float64\n",
      " 2   Emg3          453169 non-null  float64\n",
      " 3   Emg4          453169 non-null  float64\n",
      " 4   Emg5          453169 non-null  float64\n",
      " 5   Emg6          453169 non-null  float64\n",
      " 6   Emg7          453169 non-null  float64\n",
      " 7   Emg8          453169 non-null  float64\n",
      " 8   Emg9          453169 non-null  float64\n",
      " 9   Emg10         453169 non-null  float64\n",
      " 10  repetition    453169 non-null  int64  \n",
      " 11  rerepetition  453169 non-null  int64  \n",
      " 12  stimulus      453169 non-null  int64  \n",
      " 13  restimulus    453169 non-null  int64  \n",
      "dtypes: float64(10), int64(4)\n",
      "memory usage: 48.4 MB\n"
     ]
    }
   ],
   "source": [
    "raw_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9ad2648b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Emg1</th>\n",
       "      <th>Emg2</th>\n",
       "      <th>Emg3</th>\n",
       "      <th>Emg4</th>\n",
       "      <th>Emg5</th>\n",
       "      <th>Emg6</th>\n",
       "      <th>Emg7</th>\n",
       "      <th>Emg8</th>\n",
       "      <th>Emg9</th>\n",
       "      <th>Emg10</th>\n",
       "      <th>repetition</th>\n",
       "      <th>rerepetition</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>restimulus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "      <td>453169.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>0.005103</td>\n",
       "      <td>0.148389</td>\n",
       "      <td>0.138062</td>\n",
       "      <td>0.102310</td>\n",
       "      <td>0.048998</td>\n",
       "      <td>0.165430</td>\n",
       "      <td>0.587269</td>\n",
       "      <td>0.442196</td>\n",
       "      <td>0.203062</td>\n",
       "      <td>0.301173</td>\n",
       "      <td>3.266322</td>\n",
       "      <td>2.535246</td>\n",
       "      <td>5.786462</td>\n",
       "      <td>4.617968</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>0.010483</td>\n",
       "      <td>0.261329</td>\n",
       "      <td>0.298778</td>\n",
       "      <td>0.247929</td>\n",
       "      <td>0.108016</td>\n",
       "      <td>0.347019</td>\n",
       "      <td>0.805044</td>\n",
       "      <td>0.669024</td>\n",
       "      <td>0.474586</td>\n",
       "      <td>0.421003</td>\n",
       "      <td>3.489826</td>\n",
       "      <td>3.359291</td>\n",
       "      <td>6.599539</td>\n",
       "      <td>6.446301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.007300</td>\n",
       "      <td>0.063500</td>\n",
       "      <td>0.092800</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.041500</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.009800</td>\n",
       "      <td>0.004900</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.002400</td>\n",
       "      <td>0.056200</td>\n",
       "      <td>0.322300</td>\n",
       "      <td>0.217300</td>\n",
       "      <td>0.004900</td>\n",
       "      <td>0.148900</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>0.004900</td>\n",
       "      <td>0.192900</td>\n",
       "      <td>0.139200</td>\n",
       "      <td>0.092800</td>\n",
       "      <td>0.048800</td>\n",
       "      <td>0.170900</td>\n",
       "      <td>0.759300</td>\n",
       "      <td>0.468800</td>\n",
       "      <td>0.166000</td>\n",
       "      <td>0.385700</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>11.000000</td>\n",
       "      <td>9.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>0.903300</td>\n",
       "      <td>2.976100</td>\n",
       "      <td>4.660600</td>\n",
       "      <td>4.099100</td>\n",
       "      <td>2.482900</td>\n",
       "      <td>4.668000</td>\n",
       "      <td>4.665500</td>\n",
       "      <td>4.668000</td>\n",
       "      <td>4.663100</td>\n",
       "      <td>4.421400</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>23.000000</td>\n",
       "      <td>23.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                Emg1           Emg2           Emg3           Emg4  \\\n",
       "count  453169.000000  453169.000000  453169.000000  453169.000000   \n",
       "mean        0.005103       0.148389       0.138062       0.102310   \n",
       "std         0.010483       0.261329       0.298778       0.247929   \n",
       "min         0.000000       0.000000       0.002400       0.000000   \n",
       "25%         0.002400       0.002400       0.002400       0.002400   \n",
       "50%         0.002400       0.009800       0.004900       0.002400   \n",
       "75%         0.004900       0.192900       0.139200       0.092800   \n",
       "max         0.903300       2.976100       4.660600       4.099100   \n",
       "\n",
       "                Emg5           Emg6           Emg7           Emg8  \\\n",
       "count  453169.000000  453169.000000  453169.000000  453169.000000   \n",
       "mean        0.048998       0.165430       0.587269       0.442196   \n",
       "std         0.108016       0.347019       0.805044       0.669024   \n",
       "min         0.002400       0.002400       0.002400       0.002400   \n",
       "25%         0.002400       0.007300       0.063500       0.092800   \n",
       "50%         0.002400       0.056200       0.322300       0.217300   \n",
       "75%         0.048800       0.170900       0.759300       0.468800   \n",
       "max         2.482900       4.668000       4.665500       4.668000   \n",
       "\n",
       "                Emg9          Emg10     repetition   rerepetition  \\\n",
       "count  453169.000000  453169.000000  453169.000000  453169.000000   \n",
       "mean        0.203062       0.301173       3.266322       2.535246   \n",
       "std         0.474586       0.421003       3.489826       3.359291   \n",
       "min         0.000000       0.000000       0.000000       0.000000   \n",
       "25%         0.002400       0.041500       0.000000       0.000000   \n",
       "50%         0.004900       0.148900       2.000000       0.000000   \n",
       "75%         0.166000       0.385700       6.000000       5.000000   \n",
       "max         4.663100       4.421400      10.000000      10.000000   \n",
       "\n",
       "            stimulus     restimulus  \n",
       "count  453169.000000  453169.000000  \n",
       "mean        5.786462       4.617968  \n",
       "std         6.599539       6.446301  \n",
       "min         0.000000       0.000000  \n",
       "25%         0.000000       0.000000  \n",
       "50%         3.000000       0.000000  \n",
       "75%        11.000000       9.000000  \n",
       "max        23.000000      23.000000  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.describe(include='all')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ccb02915",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Unique Dependent values and their counts :\n",
      "0     184003\n",
      "8      16361\n",
      "2      15525\n",
      "7      15517\n",
      "12     15513\n",
      "4      15507\n",
      "6      15497\n",
      "9      15476\n",
      "11     15470\n",
      "5      15468\n",
      "10     15443\n",
      "1      15443\n",
      "3      15441\n",
      "14     10342\n",
      "17     10337\n",
      "13     10336\n",
      "15     10295\n",
      "16     10261\n",
      "21      5173\n",
      "18      5171\n",
      "19      5171\n",
      "23      5144\n",
      "20      5138\n",
      "22      5137\n",
      "Name: stimulus, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(\"Unique Dependent values and their counts :\")\n",
    "print(raw_data[\"stimulus\"].value_counts())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "4bfaf7c1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Frequency')"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "count_classes = pd.value_counts(raw_data['stimulus'], sort = True)\n",
    "\n",
    "count_classes.plot(kind = 'bar', rot=0)\n",
    "\n",
    "plt.title(\"stimulus Class Distribution\")\n",
    "\n",
    "plt.xlabel(\"Class\")\n",
    "\n",
    "plt.ylabel(\"Frequency\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "631d4bd5",
   "metadata": {},
   "source": [
    "# Data Cleaning and Exploratory Data Analysis with New Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "77a8fee4",
   "metadata": {},
   "outputs": [],
   "source": [
    "index_names = raw_data[ (raw_data['stimulus'] != raw_data['restimulus'])].index\n",
    "raw_data.drop(index_names, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e1ca9001",
   "metadata": {},
   "outputs": [],
   "source": [
    "index_names = raw_data[ (raw_data['repetition'] != raw_data['rerepetition'])].index\n",
    "raw_data.drop(index_names, inplace = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "eb95b5d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Emg1</th>\n",
       "      <th>Emg2</th>\n",
       "      <th>Emg3</th>\n",
       "      <th>Emg4</th>\n",
       "      <th>Emg5</th>\n",
       "      <th>Emg6</th>\n",
       "      <th>Emg7</th>\n",
       "      <th>Emg8</th>\n",
       "      <th>Emg9</th>\n",
       "      <th>Emg10</th>\n",
       "      <th>repetition</th>\n",
       "      <th>rerepetition</th>\n",
       "      <th>stimulus</th>\n",
       "      <th>restimulus</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>269680</th>\n",
       "      <td>0.0049</td>\n",
       "      <td>0.0977</td>\n",
       "      <td>0.0684</td>\n",
       "      <td>0.0195</td>\n",
       "      <td>0.0293</td>\n",
       "      <td>0.3418</td>\n",
       "      <td>0.2661</td>\n",
       "      <td>0.3589</td>\n",
       "      <td>0.4346</td>\n",
       "      <td>0.1538</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>192124</th>\n",
       "      <td>0.0073</td>\n",
       "      <td>0.1050</td>\n",
       "      <td>0.0854</td>\n",
       "      <td>0.4492</td>\n",
       "      <td>0.0562</td>\n",
       "      <td>0.1855</td>\n",
       "      <td>1.0352</td>\n",
       "      <td>0.2148</td>\n",
       "      <td>0.4370</td>\n",
       "      <td>0.1318</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88886</th>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0928</td>\n",
       "      <td>0.0244</td>\n",
       "      <td>0.0098</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0195</td>\n",
       "      <td>0.3101</td>\n",
       "      <td>0.0049</td>\n",
       "      <td>0.0122</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>188936</th>\n",
       "      <td>0.0195</td>\n",
       "      <td>0.1978</td>\n",
       "      <td>0.0635</td>\n",
       "      <td>0.0415</td>\n",
       "      <td>0.1025</td>\n",
       "      <td>0.2930</td>\n",
       "      <td>1.0352</td>\n",
       "      <td>0.6958</td>\n",
       "      <td>0.0635</td>\n",
       "      <td>0.7788</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21976</th>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.0439</td>\n",
       "      <td>0.3320</td>\n",
       "      <td>0.2368</td>\n",
       "      <td>0.0024</td>\n",
       "      <td>0.1636</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Emg1    Emg2    Emg3    Emg4    Emg5    Emg6    Emg7    Emg8  \\\n",
       "269680  0.0049  0.0977  0.0684  0.0195  0.0293  0.3418  0.2661  0.3589   \n",
       "192124  0.0073  0.1050  0.0854  0.4492  0.0562  0.1855  1.0352  0.2148   \n",
       "88886   0.0024  0.0928  0.0244  0.0098  0.0024  0.0024  0.0195  0.3101   \n",
       "188936  0.0195  0.1978  0.0635  0.0415  0.1025  0.2930  1.0352  0.6958   \n",
       "21976   0.0024  0.0024  0.0024  0.0024  0.0024  0.0439  0.3320  0.2368   \n",
       "\n",
       "          Emg9   Emg10  repetition  rerepetition  stimulus  restimulus  \n",
       "269680  0.4346  0.1538           7             7         3           3  \n",
       "192124  0.4370  0.1318           9             9        11          11  \n",
       "88886   0.0049  0.0122           6             6        11          11  \n",
       "188936  0.0635  0.7788           5             5        11          11  \n",
       "21976   0.0024  0.1636           0             0         0           0  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.sample(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "f0aa807e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(378096, 14)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "raw_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8dd504b5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 378096 entries, 0 to 453168\n",
      "Data columns (total 14 columns):\n",
      " #   Column        Non-Null Count   Dtype  \n",
      "---  ------        --------------   -----  \n",
      " 0   Emg1          378096 non-null  float64\n",
      " 1   Emg2          378096 non-null  float64\n",
      " 2   Emg3          378096 non-null  float64\n",
      " 3   Emg4          378096 non-null  float64\n",
      " 4   Emg5          378096 non-null  float64\n",
      " 5   Emg6          378096 non-null  float64\n",
      " 6   Emg7          378096 non-null  float64\n",
      " 7   Emg8          378096 non-null  float64\n",
      " 8   Emg9          378096 non-null  float64\n",
      " 9   Emg10         378096 non-null  float64\n",
      " 10  repetition    378096 non-null  int64  \n",
      " 11  rerepetition  378096 non-null  int64  \n",
      " 12  stimulus      378096 non-null  int64  \n",
      " 13  restimulus    378096 non-null  int64  \n",
      "dtypes: float64(10), int64(4)\n",
      "memory usage: 43.3 MB\n"
     ]
    }
   ],
   "source": [
    "raw_data.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "8613e6c0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Emg1            False\n",
      "Emg2            False\n",
      "Emg3            False\n",
      "Emg4            False\n",
      "Emg5            False\n",
      "Emg6            False\n",
      "Emg7            False\n",
      "Emg8            False\n",
      "Emg9            False\n",
      "Emg10           False\n",
      "repetition      False\n",
      "rerepetition    False\n",
      "stimulus        False\n",
      "restimulus      False\n",
      "dtype: bool\n"
     ]
    }
   ],
   "source": [
    "print(raw_data.isnull().any())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e4f2afdb",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = raw_data.iloc[:,0:10]\n",
    "y = raw_data.stimulus"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "82fcb689",
   "metadata": {},
   "source": [
    "# Scalling Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9805af20",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f3de76a5",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = StandardScaler().fit_transform(X)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00f28aad",
   "metadata": {},
   "source": [
    "# Indipendent Component Analysis (ICA)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "61dfd812",
   "metadata": {},
   "source": [
    "https://www.nmr.mgh.harvard.edu/mne/0.14/manual/preprocessing/ica.html"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "0a603cf6",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.decomposition import FastICA\n",
    "\n",
    "ica = FastICA(n_components=10)\n",
    "X_ica = ica.fit_transform(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "bf27b986",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Splitting data for training and testing\n",
    "X_train, X_test, y_train, y_test = train_test_split(X_ica, y, test_size = 0.2, random_state = 39)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cf4fd4a4",
   "metadata": {},
   "source": [
    "# Machine Learning Models"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "290c51a8",
   "metadata": {},
   "source": [
    "# Decision Tree Classifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ee87f20f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(criterion='entropy')"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn import tree\n",
    "tree = tree.DecisionTreeClassifier(ccp_alpha= 0.0,\n",
    "              class_weight= None,\n",
    "              criterion = \"entropy\",\n",
    "              max_depth = None,\n",
    "              max_features = None,\n",
    "              max_leaf_nodes = None,\n",
    "              min_impurity_decrease = 0.0,\n",
    "              min_samples_leaf = 1,\n",
    "              min_samples_split = 2,\n",
    "              min_weight_fraction_leaf = 0.0,\n",
    "              random_state = None,\n",
    "              splitter = 'best')\n",
    "tree.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e6352c65",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred1 = tree.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a3327a44",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 85.94154985453584\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy = {accuracy_score(y_test, y_pred1)}\n",
    "print(f\"Accuracy is: {accuracy_score(y_test, y_pred1)* 100}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "915a5654",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mClassification report : \u001b[0m\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.93      0.93     35440\n",
      "           1       0.84      0.86      0.85      2416\n",
      "           2       0.83      0.81      0.82      2012\n",
      "           3       0.83      0.81      0.82      2302\n",
      "           4       0.83      0.84      0.84      2120\n",
      "           5       0.83      0.81      0.82      2055\n",
      "           6       0.85      0.85      0.85      2214\n",
      "           7       0.80      0.80      0.80      2326\n",
      "           8       0.79      0.77      0.78      2403\n",
      "           9       0.75      0.76      0.75      2255\n",
      "          10       0.75      0.74      0.74      2516\n",
      "          11       0.79      0.77      0.78      2458\n",
      "          12       0.75      0.73      0.74      2411\n",
      "          13       0.76      0.80      0.78      1404\n",
      "          14       0.65      0.66      0.66      1637\n",
      "          15       0.75      0.72      0.73      1448\n",
      "          16       0.77      0.78      0.78      1536\n",
      "          17       0.82      0.84      0.83      1645\n",
      "          18       0.78      0.74      0.76       881\n",
      "          19       0.77      0.77      0.77       801\n",
      "          20       0.88      0.90      0.89       855\n",
      "          21       0.87      0.83      0.85       810\n",
      "          22       0.88      0.84      0.86       762\n",
      "          23       0.91      0.91      0.91       913\n",
      "\n",
      "    accuracy                           0.86     75620\n",
      "   macro avg       0.81      0.80      0.81     75620\n",
      "weighted avg       0.86      0.86      0.86     75620\n",
      "\n",
      "\u001b[1mConfusion Matrix : \u001b[0m\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\033[1m' +'Classification report : '+ '\\033[0m\\n', classification_report(y_test, y_pred1))\n",
    "\n",
    "cm = confusion_matrix(y_pred1, y_test)\n",
    "print('\\033[1m' +'Confusion Matrix : '+ '\\033[0m')\n",
    "sns.heatmap(cm, cmap = 'OrRd',annot = True, fmt='d')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ef9004a",
   "metadata": {},
   "source": [
    "# Evaluation -- Decision Tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "2c142e08",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 1.0726791854006876\n",
      "MSE: 11.727532398836287\n",
      "RMSE: 3.42454849561753\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "\n",
    "print('MAE:', metrics.mean_absolute_error(y_test,y_pred1))\n",
    "print('MSE:', metrics.mean_squared_error(y_test, y_pred1))\n",
    "print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred1)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "124d29fe",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score :  0.859133862797594\n",
      "Recall Score :  0.8594154985453584\n",
      "f1_score :  0.8592092150557175\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score\n",
    "print(\"Precision Score : \",precision_score(y_test, y_pred1, average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import recall_score\n",
    "print(\"Recall Score : \",recall_score(y_test, y_pred1,average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import f1_score\n",
    "print(\"f1_score : \",f1_score(y_test, y_pred1,average='weighted'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c1e0290e",
   "metadata": {},
   "source": [
    "# KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d9cda07b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "KNeighborsClassifier(algorithm='ball_tree', n_jobs=-1, n_neighbors=2, p=1,\n",
       "                     weights='distance')"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "KNeighborsClassifier = KNeighborsClassifier(algorithm = 'ball_tree',\n",
    "                                            leaf_size = 30,\n",
    "                                            metric = 'minkowski',\n",
    "                                            metric_params= None,\n",
    "                                            n_jobs = -1,\n",
    "                                            n_neighbors = 2,\n",
    "                                            p = 1,\n",
    "                                            weights = 'distance')\n",
    "KNeighborsClassifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "cb94d10c",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred2 = KNeighborsClassifier.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4f9d466c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 95.30415234065062\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy = {accuracy_score(y_test, y_pred2)}\n",
    "print(f\"Accuracy is: {accuracy_score(y_test, y_pred2)* 100}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "b28ae637",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mClassification report : \u001b[0m\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.96      0.97      0.97     35440\n",
      "           1       0.96      0.97      0.97      2416\n",
      "           2       0.97      0.95      0.96      2012\n",
      "           3       0.96      0.95      0.96      2302\n",
      "           4       0.96      0.95      0.95      2120\n",
      "           5       0.96      0.94      0.95      2055\n",
      "           6       0.96      0.95      0.96      2214\n",
      "           7       0.92      0.92      0.92      2326\n",
      "           8       0.94      0.93      0.94      2403\n",
      "           9       0.93      0.92      0.92      2255\n",
      "          10       0.93      0.91      0.92      2516\n",
      "          11       0.95      0.92      0.93      2458\n",
      "          12       0.94      0.94      0.94      2411\n",
      "          13       0.94      0.94      0.94      1404\n",
      "          14       0.85      0.86      0.86      1637\n",
      "          15       0.91      0.90      0.90      1448\n",
      "          16       0.95      0.94      0.94      1536\n",
      "          17       0.96      0.95      0.96      1645\n",
      "          18       0.94      0.94      0.94       881\n",
      "          19       0.95      0.93      0.94       801\n",
      "          20       0.98      0.97      0.98       855\n",
      "          21       0.99      0.98      0.98       810\n",
      "          22       0.98      0.97      0.98       762\n",
      "          23       0.99      0.98      0.99       913\n",
      "\n",
      "    accuracy                           0.95     75620\n",
      "   macro avg       0.95      0.94      0.94     75620\n",
      "weighted avg       0.95      0.95      0.95     75620\n",
      "\n",
      "\u001b[1mConfusion Matrix : \u001b[0m\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\033[1m' +'Classification report : '+ '\\033[0m\\n', classification_report(y_test, y_pred2))\n",
    "\n",
    "cm = confusion_matrix(y_pred2, y_test)\n",
    "print('\\033[1m' +'Confusion Matrix : '+ '\\033[0m')\n",
    "sns.heatmap(cm, cmap = 'OrRd',annot = True, fmt='d')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "094b157e",
   "metadata": {},
   "source": [
    "# Evaluation -- KNeighborsClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "75ecd7ea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 0.3903993652472891\n",
      "MSE: 4.4112933086485056\n",
      "RMSE: 2.1003079080574127\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "\n",
    "print('MAE:', metrics.mean_absolute_error(y_test,y_pred2))\n",
    "print('MSE:', metrics.mean_squared_error(y_test, y_pred2))\n",
    "print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred2)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1abb6ec2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score :  0.9529959749805933\n",
      "Recall Score :  0.9530415234065062\n",
      "f1_score :  0.9529852627819003\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score\n",
    "print(\"Precision Score : \",precision_score(y_test, y_pred2, average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import recall_score\n",
    "print(\"Recall Score : \",recall_score(y_test, y_pred2,average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import f1_score\n",
    "print(\"f1_score : \",f1_score(y_test, y_pred2,average='weighted'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8fdcff29",
   "metadata": {},
   "source": [
    "# ExtraTreesClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a8bb8e91",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ExtraTreesClassifier(criterion='entropy', n_estimators=400)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import ExtraTreesClassifier\n",
    "extratree = ExtraTreesClassifier(bootstrap = False,\n",
    "             ccp_alpha = 0.0,\n",
    "             class_weight = None,\n",
    "             criterion = 'entropy',\n",
    "             max_depth = None,\n",
    "             max_features = 'auto',\n",
    "             max_leaf_nodes = None,\n",
    "             max_samples = None,\n",
    "             min_impurity_decrease = 0.0,\n",
    "             min_samples_leaf = 1,\n",
    "             min_samples_split = 2,\n",
    "             min_weight_fraction_leaf = 0.0,\n",
    "             n_estimators = 400,\n",
    "             n_jobs = None,\n",
    "             oob_score = False,\n",
    "             random_state = None,\n",
    "             verbose = 0,\n",
    "             warm_start = False)\n",
    "extratree.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bf05f679",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred5 = extratree.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "dc1d301e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 95.0515736577625\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy = {accuracy_score(y_test, y_pred5)}\n",
    "print(f\"Accuracy is: {accuracy_score(y_test, y_pred5)* 100}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "5300e4d7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mClassification report : \u001b[0m\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.99      0.96     35440\n",
      "           1       0.98      0.95      0.97      2416\n",
      "           2       0.98      0.93      0.95      2012\n",
      "           3       0.97      0.94      0.96      2302\n",
      "           4       0.99      0.93      0.96      2120\n",
      "           5       0.98      0.90      0.94      2055\n",
      "           6       0.99      0.94      0.96      2214\n",
      "           7       0.94      0.90      0.92      2326\n",
      "           8       0.97      0.89      0.93      2403\n",
      "           9       0.98      0.88      0.93      2255\n",
      "          10       0.98      0.87      0.92      2516\n",
      "          11       0.97      0.90      0.93      2458\n",
      "          12       0.96      0.90      0.93      2411\n",
      "          13       0.97      0.92      0.94      1404\n",
      "          14       0.91      0.82      0.86      1637\n",
      "          15       0.93      0.89      0.91      1448\n",
      "          16       0.97      0.93      0.95      1536\n",
      "          17       0.98      0.94      0.96      1645\n",
      "          18       0.96      0.92      0.94       881\n",
      "          19       0.97      0.90      0.93       801\n",
      "          20       0.98      0.96      0.97       855\n",
      "          21       0.99      0.97      0.98       810\n",
      "          22       0.99      0.96      0.97       762\n",
      "          23       0.99      0.98      0.98       913\n",
      "\n",
      "    accuracy                           0.95     75620\n",
      "   macro avg       0.97      0.92      0.94     75620\n",
      "weighted avg       0.95      0.95      0.95     75620\n",
      "\n",
      "\u001b[1mConfusion Matrix : \u001b[0m\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAW0AAAD+CAYAAADxhFR7AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAACI/UlEQVR4nO2ddXwUxxvGvxNBgyVA0GKFQClSoQbF3d2dlhrQQltaSqHIDyg1KrS0FHd3K+4uxQnuBAjBc/H5/XGb43Lc5XaO23Ch93w+88nd7Lvvvvvu7Nxmdp55hJQSL7zwwgsvUgd8nnYAXnjhhRde6Ie30/bCCy+8SEXwdtpeeOGFF6kI3k7bCy+88CIVwdtpe+GFF16kIng7bS+88MKLVARvp+2FF154YQdCiHRCiN1CiINCiKNCiMFa/SQhxDkhxL9aKavVCyHEr0KI00KIQ0KIl618dRJCnNJKJ6v6V4QQh7V9fhVCCGdx+Rlwrl544YUXzwKigapSygdCCH9gqxBipbbtcynlPBv7OkBRrbwOjAFeF0IEAt8ArwIS2CeEWCKlvK3ZvAvsAlYAtYGVJIMn7bTTAZuBtJqveVpwk4BKwF3NrjPwL9AO+AIQwH3gA+CgZjPh9OnTjXr27Jnh7NmzoVpd4ebNm28fNmxYKeDmb7/9lmP06NF5gByhoaHhISEhH2snLIC/Q0NDfw4JCSkL/KnFFgd8GBoauhvAgX0LYBDwAnAbuBoaGvqiZp+4rQTwWmho6F6tfgnmCxQHnAQGhYaGLtS2fQr8YBWjAH4B6gKRwD/avtYxDAUaAb5AbiAciAXGhoaG/hISEhIIzAYKAueBlkAAMAMoA6QBrgP1gFaarwTghpZ7X2AKEKxdq4Ka3etAAyAGOAN0CQ0NvRMSElIfmAn4a9dhWmho6DshISGzgRCtLitwR9t/IfAi5gYZAfQANtmJ+UegvhZXF2AH0Fo754+AeGB5aGhoX+0YhISEPAccA9YBz2vHOKzt/5aW6wxAFu36ycS8WfmwvSYTtOP6AqFajs7bxhsaGno7JCSkMrAYOKe5WwEUszrfrpivbZKch4aGXg0JCckKjLOxbWqbcyCT1fWxxB8SElIGc1sO0GJqp+VqNo9QGBgIXMGmrYaEhOS359dRXrBBSEiIL7AXuBIaGlrfdruNbW/gHayuT2hoaJQduxB78YeGhv6cnP+nAWlmHj7QvvprJTk2YiNgirbfTiFEViFEbqAysEZKGQEghFgD1BZCbAQySyl3avVTgMY46bSRUj5JEVLKAO2zv5Ryl5TyDSnlJCllcykl34BMLOPefFOOyJpVfgNyau3a8tLOnZZtE95+W8qo21LGx0ppCpdxD67Lt958Q16+cErKmAfy6rmjsmun9rJypbflraunZeihXbJenVoyMuKyjL0fJjt1aCvPh/4ru3RsJzeuWSqlKVxuXL1Etm/bSkpTuEP700f3yjPH98mGDerJRXOnyXp1aklpCpfSFG7Z1r5tK3lo7xZL/ZZ1y+XB3ZtkvTq15PWLx+Ubr78mY+9fk1fPHbGK8ZSUppty4+rFsluXjjIh8oZcPG+6LFWq1GMx3L95QUpTuLx+8YT89n+D5ICv+sr74edlzerV5Kkju+XI4YPkX6N/ktJ0U/41+if53fDB8vrF4/KzPj3lb6NGyvvh52XlyhVl82aN5f2b56U03ZTSdFNOHveHHPDV5/L6xePyyP6tMu5BmGzbuoUsU7q0nDh2tNyybpmMvX9NStNN+d3wwfK74YOlNN2UF07+Kw/u3iSl6aY8d2KfLF68uDx+cIfFrzTdlCOGDpS/jRopr188LvdtXydj71+T98PPy6pVKstyr74iR/xv4GMx7966Rh7Zv1XWrVNLdmjXWr7TtaP89advZacObWX03StSmm7K8Msnkxyn54fd5bvdOstyr74iTbevSGkKl716vC/nzpgkK75dQZ49vl9ev3hC9v/yUzln+sQkeZOmm3avydg/RslWLZrJenVqyQO7NsrmTRvLkcMHa/GGW+KVpnC5c/Nq2b1bZ8u17/vpx3LO9AlSmsJl9L1r8u71c5brJ03hWs77OrTdsm65jL0fJqUp3JLz6xdPyCP7t0lpCpf3wy9o8e+RTZs0lLu2rJHSFC7nzpgkR30/3HKcJPfImcN226ojv9IU/tj9ZO03sUz46zfZ5+OPkpy/vRJ2/risUrlSkuszf9bkZPexjd9S/2T9EVJKBoPUW5z5wvzD/q/WeY/U6iZh/rE/BIwC0mr1y4AKVvuuw/x0/RnwtVX9AK3uVWCtVf3bwDJnMT3pmLbSL9GlHTuIunMHgMs7d5I5Xz7LtgtbtiTZdceuveTPn5e8efIAMOL7X/i890ckDvmcOXeB0qVKkj59Ovz8/Cj3ykusXrcRIQQPHzwE4P6DB+TMkT1Z+yKFC1K4YAEyZwogICBjkngTt9miwluvExgYCEB0dIwlphHf/8rnvT/Eelhq3YatNG5QGyEE/v7++Pv5cf/BgyQxJB43Z47sZM2aGSEEARkzUrhwAa7fuMm6DVto3LAOAI0b1mHths3kzJGdu3fv8cZrLxOQMSPFiz3PtWthREVHW45tijIhhCBnjuyULBHC1JnzqFurGlmyZubOvXtUeOt1/PzM/2yVLV2SsBs3AHguf15Kl3oBAF9fP3x9fblx46bFr5SSlavXU79ODXLmyM7LL5XGz8+PgIwZyZ8vDwlSsmHTtsdiLvdKWbJkzsydu3epVb0yQYHZ2Lp9N927tidNmjQABAVlsxxn7frN5M2bm0IF8pOQIImKjiYuLo4oUxQZ0qfD39+PQgWfI2eO7DRuUMecS6u8Obomly5dpW6tqtp5v8i9+w9YvXYjjRvW1eKty9oNWx677vfvP2DPvn9p3qQBAGn8/cmcOVOSdmOKikII4dA2ac5fJOzGTcv1AZLEf/7CJcq9UhaA8m+WY/W6jUnieXSP5LbbVh35Necl6f1ki7DrN9i4ZbslfmeIj49Pcn0S77vkYB2/OyFUihDdhRB7rUp3a19SyngpZVkgH/CaEOJFoB9QHCgHBGIePUgxuONFZOIv0Q1gDeaxGYBhwKFaP/2Er3ZDWuPlbt04vdLxfwHLV62lfu0aAKzdtI2cufNRvGRZy/Zizxdm3/6D3L5zF5Mpis1btxMWdoOv+n7Cd6N+p1LNxoz8cTR9er2frL2rOH7iJBcuXqZh844M/vpzNm7ZQc6cOSgeUjSJ3fUbN8kVnNMSQ1xcHKfPnHsshlG//Umlmo1ZuvwfPv7wHS5fucbxE6coU6oktyJuW26CHNmDuBVxG4DixZ5n9bpNXL5yjYOHj3Er4g5h128w6re/qFSzCUuXr+bjD98xx3H9JmvXb6ZihTe4e/ceBZ/LlyTO+YuWU7H8m5bvBw8dpV6TdtRv2p6AjBl4uWxpy7a9+w8SFJSNggXyJ7GvWb8lO3fvY2C/Pg5jDg+/xcMHkbRp2QSAm+Hh7N1/kBbt3qV91484dOQ4AA8jI/l74jR6vN+VgICMlHv1JarUakKF6g0JyBRAnVrViI+P5/BRs/2qNRsIC7ueJG9rN2xxeE1yWHUquYJzcCsiwibeCMv2fw8doWGLjrz70adkyJCefgOH0bhlJ/oPGkFkpMnB9btKYLasdm0f5XwZFcu/kaTOOv6iRQqxbsNm8/mtXs81m/ZqfY84Q9K8bLabF2sM/+5nPu/9ET4+zruI4OAcdO3UJsn1qfDW6073U4lfBT4KRUo5Vkr5qlUZa8+nlPIOsAGoLaW8Js2IBiYCr2lmV4D8Vrvl0+qSq89np97p+SULIURxIcQX2pvNX7XPJaxM4oGy2gFfwzx+Z/klSh8YSIUvkv4QFaxcmZe6dWPNF/Z/oGJiY1m/aSu1a1bFdP8Of40Zw8fvdcQ8ZGgOuUjhgrzTpT3d3v+Edz7sTfGQYvj4+jBzzgL6fd6LTasX0e/zj+k/aESy9q6iRPFiFHguH/NmjGPM35MZ8/ckSwfpCEUKFyRPnlwMHfHTYzH07vk+m1YvokG9WkyYOoten/bnq897Pfb0L4RAYH466t61A7cj7lC3STsKFXiOF0oUw9fHh94932PT6oU0qFeTabPmAzDs+1/o8X4XPv5sAKVKliBdunQWn2P+noyvry8N69W01JUpXZI50/8mX97cZMoUgL//o9cfy1aueexme/75QgQEBPDV5x8zZfpcsFqIzDrm38dOJCgo0NIZxMcncPfuPeZMG0vf3h/xyecDkFIyeswEOrVvRcYMGYiKjub0mbOsWzGPLWuWYDKZWLL8H34aOYQR3/9K87bdyJgxAwhhyZuvry9/jZvi9JrYg3W8JUuEsH7VApbMnUKdmlU5dfosbVo0YdGcyaRPn46xE6Y+dv2mzZpPXHw8x06ctGtrzvkkLee1LHUPIyPp9elXfPX5xwQEZGTY4K+YMXsBTVt34WFkJGmsroH1PeIM1n4f5eVdh/YbNm0jMDAbL75QXFe+7t67x7oNW5Jcn8XLViW7j0r8qlDptJODECKHECKr9jk9UAM4oY1To830aAwc0XZZAnTUZpG8AdyVUl7D/B6rphAimxAiG1AT+Efbdk8I8YbmqyPm9ydOzy+5oL8AZmH+T2K3VgQwUwjxpY35HbRfIiFEAyHEHiHEttkTJ5L3tdcsRsGlStFw3DhmNWqEyeppxhqbt+6gZPFiZA8K5OLly1y+cpVGLTtStUYdwq5fp2nrLtwMv0WLpg1YMGsi0yeOIUvmTBQskJ+FS1dSs1plAOrUrMqhI8csfu3ZPymKFC6Ij48PFy9doVHLTlSt04yw6zdp2rorN8NvEZwzB2HXHz0hJSRIJo/7zWEMdWpWZfrMeTSoW5Oa1c3nERSYjRs3ze+JbtwMJzAwKwBp06Yl4vYdevfozrQJo7l9+w758+W1+GpQtyar124E4PCR43Tv8TmXrlzlyNETDB72A2vXb2bB4uVs3LyNH0Z8k+Rf5djYOHr16U/zJg3InSuYk6fPAhAXF8eadZuoW7vaY7YN6takY7sWZMiQnkyZAuzGHHryDGHXb1C1TjP+WbORW7ciCArMhhCC0qVewMdHcPv2HQ4ePsoPP/9B1TrNmDZzPtfCbrDin3X4+/tRs1plDhw8zEtlSjFj0hjmzRjPS2VKcSvitiVvFy9f0dqN/Wty8+aj925h128SFBhoE695mCYgICMZM2QAoG7t6vj6+pA/vznHtWtU4diJUKxhzvkGcgXnJFdwDsqULvmY7aOcD7Lk3JzDr5Jc9yKFCjLhr19YMGsi9WrXSHJtre+R5GDr91FeOlK1TlMtL+b7KRH7/z3E+o1bqVqnKX2+GMjOPfv4rN8gh8fYvnMv+fLmITAwW5Lrkxz0xu8KVIZHnCA3sEEIcQjYg/ll4jJguhDiMOYXrtmB/2n2K4CzwGngb+BDAO0F5FDNxx5gSOJLSc1mnLbPGZy9hMT5j003oJyU8lsp5TStfIv5ibobkAPzLAIAyy+RlHKp9q9GuUaNG3PjiPmHKEv+/LRasICFHTpw69QphwddvnIN9eqYn+RCij7Pjo0rWL9yAetXryBXcDALZk00/wt7y3zeV6+FsXrdRhrUqUnOHNnZvfcAADt376Pgc486RXv2ruDS5avEx8cBcOVqGGE3bvDPklmsXzmf9Svnkys4BwtmTSBH9iCqVq7AoqWrkFLy76EjpE+Xlpw5sieJ4fyFS4B5rLjPF9+QPXsgXTq2thyvauUKLFpivpaLlqykWpW3kVLSt/8QChbMT5eOrZm7YCmvvlyW8FuPfgjXbdhC4UIFkFJS7pWytGreiD1bVlGrRmW+6f8ZadKmYdykGYz5ZSTp0z968r546QpffTOMwoULULN6Zc6ev2AZd9y+ay+FCxWwDPlIKfmk7wAKFnyOLh1bc+VqGGfPX6ByxfKPxQwwY9IYChXIz/qV86lVozKNG9YlNs6cy3PnLxIbG0e2bFmZMWmMJZ/161Qnc+ZMNGtcHyklO3btpUihgpbrGR0dTf9vhvNy2VKWvIUULcKOjcsdXpPV6zYB5qGPTAEZqVGtEouWrNDiXWGJ92b4rcSXRFy7dh0fH19ua+9lduzaS5HChSzXzzrnObIHkSs4mLPnLySx3bxtJ+MmTWfML99Zci6lpP+g4RQuXJAuHdtYfCWeX0JCAmP+nkTrFk0s26zvEUew59ecF+1+WrlAy4v5fkrEpx9/wOY1i1m/cgE/jRzCG+Ve4YcRgxweJ0+uYA4eOorJFJXk+iQHPfG7Cnc9aUspD0kpX5JSlpZSviilHKLVV5VSltLq2kspH2j1Ukr5kZSyiLZ9r5WvCVLK57Uy0ap+r+aniJSyh5QyudkpgPMpfwlAHuCCTX1ubVtuYDLmcW0fYA7mN6jrMXfoIkP27Cx73zyuXGngQNIHBVHvjz/MzuPiGFuuHADNZsyANFmIjDSxfedehgwaYD6Sf0YQvtoZJmiHNaPnp/25c/cufn5+fPPVZ2TOnImhA79k+Hc/ExcfT9o0aRgy8Itk7des28TQb3/ixs1w9uz7F4CKNRrR84N3yJolM0O//YmI23d4r8dnlAgpyvg/f+bTL7/hyLETxMfHU7NBK1o1a0hgtqx2E1jp7TfZtHUHNeq3JH26dPj4+lK3SdskMfQfNIJz5y8QFR3NpctXKVyoAI1amuff9+n5Ht27duCTzwcwb9Ey8uTOxc/fD2XfgUPak6c/s+ctIW3aNAwd2JcffxnDufMXET4+5M2di8Fff86+A4dYvGwVxYoWoVHLTly7dp0cObKzavV6YmJi6fL+JwCUKVWSIQP6Mn/RcpYsX03aNGmYPW8J2YMCOXzkGJXefosVq9ZSr3Z1y/ntO3CItes3kyaNP3MXLAEEXTu2plP7Vo/F3OeLb9i99wC379yhYo3G5MkdTPs2zdm4eTv1m7bH39+fb4d+/djLsVzBOQkpWoQmrTvj5+tLieLFaNW8EaNGj2Xj5m1ERpoIvxXBhYuXk+St0ttv2b0mi5ev4vDR40RFRdOu8we827WDFu/XVvGaH57+WbOBmXMW4uvnS7q0aRky4As+/2oIsbGx5M+XhxFD+vP1oG85d/6CVc7NMxYHfNmbz/oNTmLbvG23x3LesF6tJNcnMf7zFy8xY9YCAGpUq0SzxvUAtHtkD0MGPGrbie3Yuq1+0L2LXb+O8uIqypQuSa0aVR67Po5gL353wtcQr54DkVzHLoSoDYwGTgGJjxPPYZ4v20NKmfzAFTBICN0qC4NMj00VTQVQEZHQ8Q+ZS36fdRiZNxXfXhiOdEFPfEFGKfQ5vaVMdQ0g2SdtKeUqIUQxzMMhiQNqV4A9Usp4Vw4Y4+PD9ly5uJEhAxJIHxdHyJ07hNy5w8+jx7Ju4xZ8fHwIypaVEUO/JjhnDqSUDBs5ik1bd5AuXTq+Hfq1ZSrT1WthfD1oBFeuXedaWBh58+TGR/hQq0YVejl4CRUdHU27Lh8SExtLfFx8sraJiI+Pp1mbrgTnzMFfo3+wa3Mt7Dp9+w/lVsRtBNCyeSM6tWvpxDYCgaBl84Z0atfK4fH7DRzOxs3bCArMxrIF05KNFWDztp0MG/kzCQkJtGjSgO7dOjxxzCp+AarWaUbGDBnw8fXB19eXBTMn2LU7e/4CvfsOtHy/dPkqvT58h87t7eej38BhVrmY7vD4qjGrtAsVW9fjjdfi7Zjitp4SsytIdb2wKtwxmT3ZYjOhvu+nH8vxf/4qj+zfJqPvXZNXzx21TPq/d+lfmXD7pEy4fVJO+vMHOeCLXjLh9km5Ydl02a1TGxkfESr3b14imzepLxNun5TSFC7bt20lt65fIRMib8obl0JlZMRlGXMvTDZv2lge2LXR7qT+hMib8sGti1Kawp3aqhANkiMzPImtNIVrxJRtScg/yZEWqlWtLC+eOiij712TDerXdUscKn6lKVxWqVzRIXFDiXCRQrlQaRcqtkbFa5TtU43ZDX3OLyD1FsP7PwNKii4YlUg46NKxDSVLhJDG35/cuYItk/4DAjJYbE2mKMvY5rrNu2hUpypCCMqWKs69+w+5ER7B6TPniIuLp/ybryGEIEf2INKnT0dcXBxxcXGWaVu2EEJYZgQ4swX9RIPkyAxPYgtQ7pWXyJI5c7LHT8ShI8cokD8f+fPlJY2/P/VqV2fdxsfJIqpxqPh1FXoIF0blQqVdqNgaFa9Rtp4Ss6tw14tIT0WKLhhlTTg4EXqKki8Up0uH1pZJ/xDNqDFTWLxiPZkCMjD5D/Mc6+s3b5E72IoMkTOI6zdvceN2FJkzBdCjdz8uX7nK66+9wo5de7l06QptWzW1TLeyh/j4eJq26crFi5ed2iYSDR4+jFQ412tW5+U+Wz24fuMmuXIFW74H58zBocPHktlDXxzqfgXd3v8EIQStmjeiVfPGTmNwN+FCNWaVdqFia0S8Rtl6Ssyu4lkfHknRHxtbwoGfnx+duveykAkAen/QkY1LJ1G/VmWmzV3m1N/eAwf54tMezJsxnqtXw+jQpgWbVi/i0JHjnDx1xuG+vr6+LJ4z2amtKtEAHidJuMvWSBgRx8xJf7Jw9iT+/v1Hps9ewJ59B5K1N5JwoRd624WqrRcpB1+FkhqRop22NeEgNjaOo8dOkDlTgIVMYI0GtSuzZsM2AIJzBHHtuhUZ4sYtgnMEkSs4JyVCipI/X178/PyoVuVtjp0IJXPmTLxe7mW2bN/1mF9bOLNVJRrYI0m4w1YFwTlzEBZ23fL9+o2bBAfneOI4VP0mbgsKCqRG1YoWirojGEG4UI05Ee5sQypQidcoW0+J2VU868MjKRp3IuHgzLnz9B80HB8fQeWK5S3bz198RLtft3kXhQqYaflV336dxSvXmwkqh0+QKSADObMHUqpkCe7df0BExG0iIm6zZdtOni9ciKioaLbv3GN3sSeAiIjb3Lt3H8CprQrRwBFJ4kltVVGqZAnOX7zMpctXiYmNZfmqtVStVOGJ41DxGxlp4sHDh5bP23bspujzhZP1bwThQiVmlXahYmtUvEbZekrMruJZ77RTXARhwJe9+fCTLzl//iIBGTMQaYpi+8499On5HnPnLeD8xcsIHx/y5MrB4C8+AqBS+VfZvH0vNZu9S7p0aRk+4BPA/O/pF3160Kl7L6Kjorhz9z6hp84wc84CatesRpVK5e3GcCP8Fl9+PZT4hARkQkKytiqwJbGAYzKDii1Any8GWhFTzOSfFk3tvxj18/NjYL8+vPNBb+IT4mnWuL7DDlMlDhW/tyIi+Kh3PwDi4+KpX7fGY4sjWUOFcGFULlTahYqtUfEaZespMbuKZ31MO1lyjVsQdUv3AWSU/bVIHEGkc/+6BV544cVThBvINRMVyDVdnjVyjRdeeOFFakNqfcGoFyk+rFO1TlMaNGtPo5adaNqma5JtIl1gknIu7D6NO/bm9RptKflWI0q80YDJ89Yg0gVy4nw4Ldt1oVHz9jRt3YlDB3ZDzF2IucuuHVto1Lw99Rq3pn3n7hBzl+joaJq37UbDFh15tXxNyr5elfpN2+mKefO2ndRq2Joa9VswdvyUZG3v3btPr0+/onaj1tRp3Mbpamfx8fE0btmJ93p85jSO5HJnjX4Dh/Fm5bpuPz+j/KraqsThCblQjQH0twujcmykb9U4VPGsj2mnOCPSFZbc7q1r5KE9m2WJEiUsTLkuHdvJjStmSXn3jNy4YqZs37qZlHfPyLuXD8o6tarJK6E7pLx7Roaf2yfl3TNJGGzbN66SdevUklWrVHYr20ua7EtMJedfr6STSu6MYrN5ArNPNQ5PyIWKrUq7MDLHT42Z6YY+ZzpIveVpsxs9nhHpKsq98hJnzl3A39/PwpQTQljILvcfRJIzh3lpyaWrNlKjSnny5DIvHRqkreNszWArW/pFkPpeWKgwuBxJTDmCqqSTXhjFZvMUlpxKHJ6QCxVb0N8ujMyxpzAzXYEb19P2SOhVrqkmhAiwqa/t2iHNLLmmrbswe94i3Xut37SVTAGPQviq7yd89+t4KtXrwMhfxtHno84AnL94mXv3HtDhvb407dCTRcvXWvaJj4+nUctOvFWlHq+8VJp06dI6Pa49Btf16/Zp3nokpqyhIulkhmu5Sw4q52eUX6NiUIWnxKG3XRiZY6N8p0SOn/XhEWfKNb0wy9/0BI4IIawXyR2ezH4Wscyx4ycn2abKkgMzU277zr1JmHoz5yygX5/ubFo+lX69u9N/6M+AWb7q6IlT/PXzEMb99j/+GD+TcxcuA0kZbCdOniY6JsbpsVXgTGLKGq4wLV3JnRepC660Cy+S4r/+pP0u8IqUsjFQGRgghPhY2+bwnKWVWGb3bp2SbFNlyYGZKVesSCH8fB+9F164dCU1q5jnxdap/jaHjpmlnHLlzE6FN14hQ/p0BGbNwqsvvciJU+eS+MucORNlS7+Y7FOwJV4FBldyElO2UGVagmu5cwajGGqexpLTA0+IQ6VdGJnj1MjMTISfQkmNcNZp+8hHUjrnMXfcdYQQP+HCD5UrLDkwM+WqVk7KmsqZIzu795tnZuzc8y8FNd2+apXeYN+/R4mLi8cUFcWhI6EUKZj/MQbbvgOHSJPG3+mxVRhcjiSm7EFV0snV3DmDUQw1T2PJ6YEnxKHSLozMcWpkZibiWX/SdvZjc10IUVZK+S+AlPKBEKI+MAEopXowVZYcmDuoNes3sWvvAe7evWthZw0d+CXDR/74SFbsq14AFCn0HG+/9SoN236Aj/CheaNaFHu+ICfO37Qw2K5eCyMhIYGYmBi3sr3AvsSUO6CSO6PYbJ7CklOJwxNyoWKrAiNz7CnMTFeQWseq9cKZ3Fg+IE5KGWZnW3kp5TanR1BgRCoj5q5+2zRZDAvDCy+8cBPcwIhcqsCIbPCsMSKllJeT2ea8w9ZgT7po5er1jB4znjPnzjN3+jhKlSzx2H5OJblsOuKTp87Q8d2ePHjwABC0admE/n0/MR/rj7GcOX+JuRNHUeqFogAsWbWB8VPnW/YPPX2ehVN/oeDzL/Lx5/25eOkKAsH9Bw8IDMzmVgkqR3lJDnokz1zxe+/efb4ePIKTp88ihGD44K94qYzjf6TUpNf0yalVrdNUkybzTVaaDNTkqlTiMFJiC4y5fkbKfBnhWzXHriDV9cKqSAlyjT1ywemje+WZ4/tk+7at5KG9W+xOxFeV5Or10Xvy5x+GS2kKlxHXzsjqVavIU0f2mI91cINs37qZPLR9hZR3Tj1WTuxdI6tVqSjlnVMyMuKy3LHpHylN4TLq7lXZsnlTuXHNUrfLmKmSLvQScVT9GkEIUr12eolDqiQRlTiMIuIYdf1SI7nG6bm5oc9Z7usj9Zbk/ADpgN3AQeAoMFirLwTsAk4Ds4E0Wn1a7ftpbXtBK1/9tPpQoJZVfW2t7jTwpceQa+yRC4oULuh0KUsVKaz79x9w+OgJen34LgDZsmbh+ecLcf3GTfOxtGVeHWH56k3Uq1ERgPTp0/HGa68AkDZNGkq9WILr12+4XcZMhXShQsRR8WsUIUhVTk0vVMkZKnEYRcQBY65faiTXqBKNXIGPj9BdnCAaqCqlLAOUBWoLId4ARgKjpJTPA7eBbpp9N+C2Vj9Ks0MI8QLQGiiJuZP+QwjhK4TwBX4H6gAvAG002+TPTyUZTxPOpLBsiS2ffD6AY8dP6pbwWrFmM/VqVXqs/t69+6zfuJVJU2fxVpV6vPVGOacSVIkEHme2KlAn4uiD8YQgvXJq+ohDT0LOcKesm2ocRly/1EiuSQkIIXSX5CDNeKB99deKBKoC87T6yUBj7XMj7Tva9mrCfJBGwCwpZbSU8hzmp+rXtHJaSnlWShkDzNJsk0Wq6LT1SGFZE1umTxrDrj37KFOqpC7prINHTpA+XVqKFSmY1GdcHH2+/IaO7VqyYtHMpyZBZSThwmhCkF4ZM6OJQ09T1s1LmElZCB+huzj1ZX4i/he4AawBzgB3pJRxmsllIK/2OS9wCUDbfhcIsq632cdRfbLw+E5brxRWIrHlhRIh9OrzFXVqVSMqOkrXMZav3ky9mo8/ZQ8YMpKCz+Wjc3vzi6unJUHlChFHL4wkBKnIqeklDrlCzjBC1k0lDqOuX2ok16QEVJ60rdnbWulu7UtKGS+lLAvkw/xk/NR/eT2605ZSvxRWjuxBBOfMycef9adw4YJky5rFIbHFGgkJCaxct5V6NSsmqR81+i8ePHjI++90euoSVKpEHBUYRQhSuXYqxCFVcoZKHCpQicOo65cayTUpAZUnbWv2tlbG2vMppbwDbADeBLIKIRJn3uUDEnUSrwD5AbTtWYBb1vU2+ziqTxYpwuS0Ry7ImiUzQ7/9iYjbd3ivx2eUCCnK+D9/TrKfqiRX8yb1+eqb4aRJk4Y0afzJnSuYN8q9TExMLEO//YGI23d5r88gShQtzPjfhgKw58ARcgdnJ3/e3BY/Yddv8OffkylcqADtun7EtbDrZM2SmcyZAtwqY2YU6ULVrxGEIJVrp0IcUiVnqMRhFBFHFXrjSI3kGqPavDV8fN3zLCqEyAHESinvCCHSAzUwv1zcADTHPAbdCfP6TABLtO87tO3rpZRSCLEEmKExyfMARTHPShFAUSFEIcyddWugrdO4kiPXuAVGkmtUEH1bv23abMbF4YUXXjiGG8g1G7Jm1N3nVLnz0OHxhBClMb9Y9MU8KjFHSjlECFEYc4cdCBwA2kspo4UQ6YCpwEtABNBaSnlW89Uf6ArEAZ9IKVdq9XWBn7VjTJBSDnMWc4p32ipEDiPJDpu37aT35wOINJnIljUL2zcsB+BE6Cm+GTKCSJOJvLmD+WFIXwICMtgh4pxj4dRfKVHqFUvd+736EnryFGnSpHU72cEoYoRKjo26HkaTkozK87Nsq2Kvcj2ckp3c0GlvCgzQ3alViniQ+rg4KUGucZXIYbRSyrKFM+WB3Zvkiy++aLFt2qSh3LV+oZR3Tsu5U/6Qo74dKOWd00nKIyLOIzLIP0vnyd69PpQlX3gh5dU+jCQ7pMD1MJKU9NQUWFKxrZFtyCnZyQ19zqbAAKm3GN7/GVBS9EWkKpHDaKWUerVrkD0wkEwBGS225y9cotxLLwJQ/vWXWL3hcba+mYjzaLbJw8hIJk6dRZVKFfD393/qah+eoMCiEoORpCRPUGBJbbaq9irXwyjSlTXcOeXPE6HcaQshXFbiVCVyqOBJyAB+fn4W26JFCrFu0w4AVq3dwrXr4Y/tb0vE+eX3v+nasQ337j/Az+/Rmt9PS+3DE8gOqjEYRUryBAWW1Gbrir0rcCfZyRruItd4Kpwp1yyxKUuBponfk9nPrnKNCpHjaWHY4K+YMX85TTv24mGkiTR+SSfY2BJxjp84ycVLV6hR7fF53l7ohxGkJC88F0aSnXx8fXSX1AhnU/7yAceAcZjpmwJ4FfgxuZ20uY7m+Y5WLyLtETnc1Wk/CRkgLi7OYlukUEEm/GZ+gXvuwmU2btuTZF8zEaey5fuBQ0c4cuwEVes0JdIUxf0HD+nQ7SOmjv/9qal9eALZwdUYrElJxYoWSdE4vLau26vACLKTNVLrsIdeOPupeRXYB/QH7kopNwImKeUmKeUm1YOpEDlU4SoZIDYulvsPHlpsb92KAMykmzETZtG6aV3LfmYizpYkRJy2LZuyde0S1q9cwOwpY/H19WX44P5PVe3DE8gOKjEYRUpSjcNr67q9XhhFdrLGsz484mw97QRglBBirvb3urN9nEGFyGG0UkqjFh0xRUUBkm4f9KbnB+8QaYpkxsy5ANSoUp5mDWpY9rNHxLGGr68vObMHPXW1D09QYFGJwUhSkicosKQ2W1V7leuhSphzBTpW70vVUJqnLYSoB5SXUn6leydPIdeoIPqOftu0WY2Kwgsv/ntwwzztPQVy6O5zyl24mep6eKWnZinlcmC5qwc7e/4CvfsOtHy/dPkKvT5817Igky0mTZ3F3AVLEQKKFS3CiCH9SZs2rV1bt07wt+qIE4kfFy5d5uGDh2TJkpkdG1cA5peQ3wztTXR0LL5+vgz64iNKlwxh175DfPjpYPLlyQVAjSpv0ePddpAmC5Onz2bu/CXExydgiooic+ZMTgklqiowRqm1eAqpBYxT8fEEYosn2HqS4o8qUusLRt1IaXKN9eT9t958Q14+c9ju9rDzx2WVypWk6fYVKU3hsleP9+X8WZPdQrhQUTNJJH7s3rpG/rt7kyxVqpSF+NGlYzu5ccUsKe+ekRtXzJTtWzeT8u4ZuXP9Qtm9a3sp755JUkIP7ZL16tSSkRGXZcy9a7J921byfOi/TgklqiowRqm1eAKpJbEYoeLjCcQWT7A1sg05jcMNfc6+Ijml3vK0iTIeT66xxo5de8mfPy9589gfHwbz01RUdDRxcXFEmaLImSO7Q1ujJvgnEj/KvfISGTNkBCktxA8hBA8fRgJw/0EkOXMEJXvcM+cuULpUSdKnT4e/vz9vvPYqq9dtdEooUSUkGKXW4gmkFjBOxccTiC2eYAueo/jjCp71F5FPrdNevmot9WvXcLg9ODgHXTu1oUqtJlSo3pCATAFUeOt1t8ehZ4J/IvGjWZsuZMiQ3jJl8au+n/Ddr+OpVK8DI38ZR5+POlv2+ffwcRq2/ZB3eg3g1BnzbJlizxdm3/6D3L5zF5Mpik1btjF+0nQlQokqIcEoAoMzGEn8MErFxxOILZ5ga4unqfjjCryMSAMQExvL+k1bqV2zqkObu/fusW7DFtatmMeWNUswmUwsXrbKrXHoneCfSPyYPXUsUVHRFuLHzDkL6NenO5uWT6Vf7+70H/ozACVDirB+yWSWzPiDDq0a8NHnQwCzLuY7XdrT7f1PeOfD3pQoHkKDerV0E0pUCQlPU63FKHhVYFIWqbEN+Qihu6RGPJVOe/PWHZQsXozsQYEObbbv3Eu+vHkIDMyGv78fNatV5sDBw26LwZUJ/gEBAaRPn96iRrNw6UpqVjFPTatT/W0OHQvV7DKSMUN6ACqVf424uDgi7twFoEXTBiyYNZHpE8eQJXMmChbIr0vlRjVeowkMzmAU8cNIFR9PILZ4gm0inrbij6vwPmkbgOUr11CvjuOhEYA8uYI5eOgoJlMUUkozEadQQbccX2WCvzXxIzo6hkiTyUL8yJkjO7v3m39Idu75l4L5zfJuN8MjSJxKeehoKAkJkmxZzGN+ieSdY8dDWbl6PQ3q1HRKKFElJKQEgcEZjCJ+GKni4wnEFk+wBc9Q/HEVzzqNPcXX046MNFGldhPWLp9HpkwBye766x/jWPHPWvx8fSlRvBjDBvUjTZo0dm2tJ/gHBQYmO8F/7/6DtOvyAcWKFrGMizqa4H/i5Gm+/Hool69cI9JkQsoEcmTPTs8P3qFQwecYPvJH4uLjSZsmDd988REvlijKtDlLmDlvOb5+vqRLm4YvP+nOy2VegDRZaNv5A+7cvUtcfDwyIYF06dJZCCU93u/6xPGq2qvkTcUWYNOW7Qz/7hcLOeODdzu7xTYRu/bsZ8LkGclO+fOUmFObrVFtyGkcbpinfaz0c7o7tRcOXUx1j9v/HeUaoxBzV79tmizGxeGFF88C3NBpHy9bQHefU+LfC6mu004RjUhrVK3TlIwZMuDj64uvry8LZk5waOtWwoyLfp3a2umIL1+5SoNmHQDIkzuXJZY7Ny7Su/+3XLl2g7y5c/Lz8C/JkjkT46bOZ+mqDQDExydw5vwldmxcgclkspxTZKSJ6OhoAgIyOiUkeELewEuYSc22nhSHKlLrVD7dSGlyTZXKFeWtq6edTsJXnbTvCYSSxPLrj9/Kbp07yO7dOieJZeSQfvKvX4ZJeeeU/OuXYfK7of2kvHMqSVm3dJrs0KZ5knOKe3BdVqlcSVapXEkeO7DDKTHCE/LmJcykXtunGocb+pwTLxeSesvTJsqkKnKNHhhFmDGKUAJm4sfeAwfp1rndY7Gs27yTxvWqA9C4XnXWbtr52P7L/9lEfU1gIfGcDh05RqEC+QkpVoSI27edEhI8IW9ewkzqtfWkOFzBf3r2iBDidSFEZu1zeiHEYCHEUiHESCGEiwO0gm7vf0LT1l2YPW+Ray6c4GkRSuBx4od1LLci7pAzu3maY46gbNyKuJNkX1NUFFt27rNMI0zE9Rs3yZQpk8WPUUo0T5NE4SXMeI6tJ8XhCoSvj+6SGuEs6glApPb5FyALMFKrm+jKAWdO+pOFsyfx9+8/Mn32AvbsO+CKG4d4mmQAW+JHXHy8w1jMNFqb/bfs5uXSL5A1S1LdzOjoGHbs2mvoOXlS3rzw4kkgfHx0l9QIZ1H7SCnjtM+vSik/kVJulVIOBhwuxutIbgywTKQPCgqkRtWKHDpy/AnCT4qnTSixJn707juA7Tt3I6W0xBIUmJUb4eZ52jfCIwjMljXJ/mZVnKSyZbGxcUybOZdsWbNY/LibkPC0SRRewoxn2XpSHK7AXWuPCCHyCyE2CCGOCSGOCiE+1uoHCSGuCCH+1Updq336CSFOCyFChRC1rOpra3WnhRBfWtUXEkLs0upnCyHsz2m2grNO+4gQoov2+aAQ4lXtQMWAWEc7SSnHSilflVK+2r1bJ0t9ZKSJBw8fWj5v27E72YXYVeAJhJJE4se6FfMpHlKU3LlysXD2JMv2qhVfZ9HytQAsWr6WahXfsGy7/+Ahew4cplqlR3WJ51S6VEli4+IMISR4AonCS5jxLFtPisMl+Aj9JXnEAZ9KKV8A3gA+EkK8oG0bJaUsq5UVANq21kBJoDbwhxDCVwjhC/wO1AFeANpY+Rmp+XoeuA10cxaUsyl/7wC/CCG+BsKBHUKIS8AlbZsSbkVE8FHvfgDEx8VTv24NKpZ/w6G9UYoYRqm1WMeybcduMmbIkCSW7h1b8MlX3zJvyRry5MrBz8P7WfZZs3E75V9/mQzp09k9J4A6jduQJUtm2rduluyPnSfkTVUpRQVe5RpjbT0pDlfgrmEPKeU14Jr2+b4Q4jiQN5ldGgGzpJTRwDkhxGngNW3baSnlWQAhxCygkeavKtBWs5kMDALGJBeXLnKN9jKyEOZO/rKU8rqTXR7hWSfXqCD6tn7btNmMi8MLLzwVbiDXnK9aSnefU3D9YV3HE0IUBDYDLwJ9gM7APWAv5qfx20KI0cBOKeU0bZ/xwErNRW0p5TtafQfgdcwd9E7tKRshRH5gpZTyxeRi0UWukVLeAw7qsbUHe2SITz4fwLkLFwG4f/8+mTJlYvGcyXZt79y9R+++A7hy9Rp58+Tm5++H2p3ylagKIyW0aNbQoSJOohpNTGysU9WYRDgiftiL9+fRY1m3cQs+Pj4EZcvKiKFfE5wzB6TN9pj9tbDr9PnyG46fOElcXBx58+RmzrS/kXftE3HuP3jI5wN/4GrYTeLj4+navinNmrek38BhrN+4hZiYWHLlyokQgnatmjFj9gLOnDvP3OnjKFWyxGPn5UxNyN75rVy9ntFjxifr11nebHHv3n2+HjyCk6fPIoRg+OCveKlMKbu2RpJrVOLQSxRTjVclBlWiit6YVe8RTyLX6Bj2sEAI0R3oblU1Vko51sYmAJgPfCKlvCeEGAMMBaT290fA/hoUBiBFXp82bVSXcWNGJan7+fuhLJ4zmcVzJlOzWmVqVK3k0HbshKm8+dorrF46hzdfe4Wx46c+doyTp84wd/4S5k4fz+K5k9m4eRsXLl62G0+aNGmYPO43lsydwqI5k9mybSf/HjqS7DlMmT6HIoUL6jq3dzq3Y+m8qSyeM5nKFcvz+18THdr7+vqSP19ePny3Mzs3reTu3XuM/HE0YyfP5c1yZVg9/2/eLFeGsZPNYsPT5y6jSKH8LJkxmql/fsvIX8YRExtL00Z1yZsnN9myZWHlopnMnT6OsqVf5LdRwyn3SlmH51W4YAHLdVgwcwLp06WjRtVHavP2zq/Y84Wd+nWWN1sM++5n3i7/BqsWz2Lx3CnJLg5mLyZHiI+PZ8jwHxj3x48sXziDZavWcvrMObfEATB53GhL7twRr0oMquemErPKPaISh6sxq0AIH93F+v2bVmw7bH/MHfZ0KeUCACnldSllvDQLn//NoyGQK0B+q93zaXWO6m8BWYUQfjb1ySJFOu3kyBBSSlauXk99bdU/e7brNmyhcUPzC9rGDeuydsPjk/GtVWH8/Pwo98pLrF630e4xE9VoAKeqMZA88cNevNZT5kxRUUneUtva58yRnYOHjtK4YV0CMmakZIkQtm7f5ZCII4TgYaQJKSUPI01kyZwJP19fsmXNCggypDcvCZsxQwZKvhDicOVAe7CnJmTv/IoULqjLr17CzP37D9iz71+LXRp/fzJnzuTQ3ihyjWoceqESr0oMRhJVVO6RZ5VcI8w37njguJTyJ6t6a7mtJkDir9kSoLUQIq0QohBQFNgN7AGKajNF0mB+WblEmsemNwDNtf07AYudnd9Tn6i4d/+/BAUFUrBAfoc2tyIiLFJjObIHcSsi4jEbW1WYzVu3ExZ2w6HPRDUaPaoxrhA/Rv32J5VqNmbp8n/42MnQS+L5Xb5yjTPnLvAwMtIhEaddi/qcOX+Jt+t2oGHbj+jfpzs+Pj6cv3CRgIAMXA27TuOWnRj502ji4+N1xwvO1YRUoTdvl69cJTBbVvoNHEbjlp3oP2gEkZEmt8SgQuZQj8P9RDGVGFwjquiPWe894nHkGvcxIssDHYCqNtP7vhNCHBZCHAKqAL0BpJRHgTnAMWAV8JH2RB4H9AD+AY4DczRbgC+APtpLyyDMPxLJ4ql32stWrqV+7eq67YUQdn/xbVVhiocUS3a93EQ1GmeqMa4SP3r3fJ9NqxfRoF4tps2a79TemtziI5LGbU3E2bpzPyWKFmbLiqksmvYbQ77/kwcPHhIXH8/ho8fJkT2IeTPGc/nyVRYsXqE7Xj1qQipQyVtcfDzHTpykTYsmLJozmfTp0zF2wuNDYEZDNQ4jiGJG50IlZr33iMdB+OgvyUDjpAgpZWnr6X1Syg5SylJafUNtlkniPsOklEWklCFSypVW9SuklMW0bcOs6s9KKV+TUj4vpWyhzTxJFk+1046Li2PNuo3UddJpBwUGcuNmOAA3boYTGGh/ZoU9VRhncKYa86TEjwZ1a7J67YZkbQKzZeO9Hp/ToG5NypZ5kcDAbA6JOAuWraFmlbcQQlAgfx7y5Qnm7LkL5ArOyfOFC+Lv54efnx/VqrzNsROhuuPUoyakApW85QrOSa7gHJYnudo1qijFnhxUyByqcRhBFFOJwRWiiisxO7tHPI1c4+Pno7ukRjzVqLfv2kvhQgXIFZwzWbuqlSuwaIn5qXHRkhVUq/K2XbtEVZir18JYvW4jDerUtGtnrUbjTDXGFeLH+QuXLJ/XbdhC4UKOx3+llPj5+RIfH0eXjm0s5+eIiJM7OCc79pgn8oTfus25i1fIly8PpUqW4MHDSOLjEwDYtXsfzxculGyc1tCjJqQClbzlyB5EruBgzp43CyDv2LWXIgqxJwcVModKHEYRxVRiUCWqqMSsco94GrnmWVdjT5H1tB2RIVasWks9mzFUe7bdu3bgk8+/Zt6iZeTJnYufv/+f3eP0/LQ/d+7exc/Pj2+++szhC5wb4bf48uuhxCckWFRjqlQqb9fWlXPbvHUH585fQPj4kDd3LgZ/3dehfYN6tThz9jwZ0qfnxVcr4e/vx/++6cdbLxW1S8T5sFtr+g0ZRYM2HyIlfNajM4HZstLni4HcunWbu/fuUfLltyn14gtUfPtNKtZoRMTtO7zX4zNKhBRl/J8/P3YOkZEmtu/cw5ABX+g6v6xZMjP025+c+lXBgC9781m/wcTGxpI/Xx5GDOmvlHN3kXz0xqFCFFMlaOmNQfXcVGJWuUc8jVxDKl1TRC+8yjWeCi8Rx4v/ItxArrnW7C3dfU7u+dtT3eN2iivX6CXAgDopwQjlExVlF4BJU2cxd8FShIBiRYswYkh/0qZN+5idU/KCTUccHR1Ni/bvcvHSFeLi4ggIyMgH73aiU7tWrFy+hNF/z+DM+UvMnTiKUi8UBcyiwgOG/waAlNDz3bbUqPIWpM1mIVlcvxHOg4cPKVzwuaemcqNC5HCFGKVCVtHbhkCNJJLaSC2q7d6TyDWpddhDNwxXWrBSrQg9tEvWq1NLRkZclrH3w2SnDm3l+dB/3aYaY4TyiYqyS9j547JK5UrSdPuKlKZw2avH+3L+rMl2bRMib8oHty5KaQqXMffCZPOmjeWBXRsdxpEQeVOeCz0gj+zfJmPuhckmjRrIShUryFNH9sjTB9bJMwc3yPatm8lD21dYVHAiww7L2PATUt45Ja+f3iXfeL2c+bvpkYKQJ6jcqORCNW/SFC77fvqxnDN9gpSmcBl975q8e/3cE7chVSUYvYpNKudnpHKNyrX2NOWasBYVpN5ieP+X2pVrVAgwoEZKMEr5REXZBcxPalHR0cTFxRFlirLML7eFKsFHCEHB5/JTskQIcXFxSCnJmyc312/cpEih5yhcIN9j+6RPlw4/P1/AvCa3vScQT1C5UcmFat5UyCoqbcgokoinkFpUrrXHkWv+yyIIQog0QoiOQojq2ve2QojRQoiPNHqnElQJMCowSvnEGs6UXYKDc9C1Uxuq1GpCheoNCcgUQIW3XnfoT4XgY2tfqmQJrlwNc6oyc/DICeq1+oCGbT9i8BcfWTpxa5LFspWrk/VhD+5WB1LJhYqtCllFpQ2pk0RSL6nF2bV+hsk1HglnrXMiUA/4WAgxFWgB7ALKAeNUD6ZKgNGLlFA+0aPscvfePdZt2MK6FfPYsmYJJpOJxctWOfSpSl5ItF+5aCZLV66mc/tWTlVmyrxYnOWzxzBv0ij+mjyX6OgYICnJYvGyVZiiopxk4BGMULlRyYWKrV6yitFtKLWSWp6mopGr+K8r15SSUrbCzK+vCTSXUk4FugAvOdopOeUaVwgwzmCk8gnoV3bZvnMv+fLmITAwG/7+ftSsVpkDBw879e+MvGAbS/9Bw3m5bGniExJ0n0ORQs+RIX06Tp4xz/+1JllUePM1oqKcErEsxzdSHUglF3ps9ZJVVNuQshJMKiS16L3WnkauedbnaTuVG9MWOMkEZMCsEQmQFnA4PCIdKNeAfgKMCoxUPpEKyi55cgVz8NBRTKYopJRmYoSDFdpUyAuJ9nfv3qP/oOEUeC4/JlOU00WbLl0JIy7OvP7IlWs3OHvhMnnz5HyMZLH3wEHSpHGqcmSYyo1KLlTzppesotqGVEgiqZHUonKtPY1c40blGo+Esyl/44ETgC/QH5grhDiLWXpnlisH1EuAAddUY/TAKGWXMqVLUqtGFZq07oyfry8lihejVfNGdv2qEnxuhN+iV5+vuHDpMmnS+JM5UyZ+/n0sPj6CmIe3Gfrjn0Tcvst7fQZRomhhxv82lH0Hj/H35Ln4+fni4+PDoL4fEpg1C5duPiJZXLlyjQSZQExMzFNTuVHJhSvEKBXijl6okERSI6lF5Vp7GrnGx9fXuVEqhlNyjRAiD4CU8qoQIitQHbgopdyt6wheco3xUCHigJeM44Xnwg3kmjvv1tbd52T9e1Wqe9x2Sq6RUl61+nwHmKd6EBXlGmsYRQYwkjigQipRsU02BjudcHx8PG9WrkekKZKCz+W3+D8ReopvhnxKpMlE3tzB/DCkLwEBGYiNi+Pr//3CsdDTxMUn0LhuVd7r3ArSZk1CTrl37z7p06cnXdq0yZKjVIlRiTG7mxxlpMqNUbZ6YzayHRt5foYr16TSsWq98DjlmkSoKlz4+vry5Wc9WbFwBrOnjWXGrAUO7VVsVeNQUSnRa+uK2seU6XN4oUQxSr/4QpL6/oNH8GmPLiydOYbqld9i3DTzb/CqtVuIiY1l6cwxLJjyC7MXruTyVfMLo0QllV9/GEa2rFmZOWmMU3UgVbWWxJj1qNwYkWMwToHFqDZkZDv2lFy4gv/6lD+3QEW5JhFGkgGMIg44O1dXbVVjSCSJvNetI35+Sf+ZOn/hEuVeMuuGln/9JVZv2AaY37ibTFHExcUTFRWDv58fARkzJCGnnDl3gTKlS5IzZw6n5CiVPFjH7G5ylFEqN0YSSvTGbGQ79pRcuAShUFIhnvpERUfKNUaSAVRsU4IM4AyqMSRHEilapBDrNu0AzE/X166b1ymvVa0C6dOno0LddlRp2Imu7ZuRNUumJOSUX3//m3/WbODqtbBUSY5yBqNIIinRhtzdjlNzLhBCf0mFeOqdtqpyjTOokAFSI3HAGZyRRIYN/ooZ85fTtGMvHkaaSKM9iR86GoqPjw9bVkxj3aKJTJi+gEtXriUhp6xcPJMXXyxBi/bvpjpy1LOMZ7EdPwmEr9BdUiNSfJU/ayQq1yyYNfGxbUaSAVRsU4IM4AwqMSSSRDZv3UF0dAz37j8gbZpHU+qLFCrIhN/MakfnLlxm47Y9ACz7ZyNvv/kK/n5+BAVm5eUyL3D42CnKvVE+CTml5/tdGTthKmNH/8hPv/7pllzYxvzg4UM+6zfIbXPt9cIokoiRbciodpwac5GIVPoArRseq1xjJBnAKOKAUVCJwZYk8lKZF5PkN5HclJCQwJgJs2jd1Kxynzs4J7v2mhVxIk1RHDxygsIF8z9GTlm3cQtFChdKNeQoFRhFEjGqDRnZjlNbLpLgGR8eSRERBGuiRVBgoIVo8eWA/1GmVEnatGxid9dNW7Yz/LtfLJPwP3i3s8PD7N1/kHZdPqBY0SKWcVFHZAAVW9U4HJ3rk9qqxJCITu/2ZP+BQyTIBIv/SFMkM2bOBaBGlfJ8+lFnhBA8jDTRb8gozpy7iETStH4N3unQHNJm5fiJk/Qf/C2xsbFcv3GTwKxZSZM2Df0+68Wbr7/6xOdmjV179jNh8oxkp/wZlWNQy7NRtnpjNrIdG3l+ydq6YZ72/d4NdHdqmUYtTXU9t1e55r+I6Dv6bdNmNSoKL7x4HG7otB/0aai7zwn4aUmq67RTfHjk3r379Pr0K2o3ak2dxm2SXVBp87ad1GrYmhr1WzB2/JRk/V4Lu06Hbj2o26Qt9Zq0Y/L02cna6/Wt6rffwGG8Wbku9Zu2c1u8bo8hbdYkZdKcVdRs/h5lKzbllSotqNvqAybP+wfSZmXl8iXUa9ya4mXLc/jAbjP7Mvo2sQ9v8kW/ATRo2oY6jVry119/AWblleZtu1G7UWtKlavMW1Xr06hlJ15+qzqTpjmOW2+7MOp6JEKlzYF53nHjlp14r8dnbvNrlK1R94iRtq7AXfO0hRD5hRAbhBDHhBBHhRAfa/WBQog1QohT2t9sWr0QQvwqhDgthDgkhHjZylcnzf6UEKKTVf0rQojD2j6/Cj2rWKWkco2KioinKG2o+FVRbFHxa1QM0vRIbefiqUPyyP5tsleP9+WMyWMtx3CkirNk1t/yk4/esSjkVKlUQV46fdiu8sq+HevlW2++IS+fOfzE6jJG5kK1zUmTPqUboxRmPOUe8TTlmgefN5J6S3J+gNzAy9rnTMBJ4AXgO+BLrf5LYKT2uS6wEvMM8DeAXVp9IHBW+5tN+5xN27ZbsxXavnWeSLlGCJFFCPGtEOKEECJCCHFLCHFcq8vq9BfBBioqIp6itKGqXGMEMcKoGBIRHx9PpkwBhBQtQpQpivz58lqO4UgVRwgeJ+MEZLSrvHLk6Any589L3jy57R5fpV0YmQtXSUzOCEGeQlTxBDWa1ESukVJek1Lu1z7fB44DeYFGQOKaG5OBxtrnRsAUacZOIKsQIjdQC1gjpYyQUt4G1gC1tW2ZpZQ7pbkHn2LlyyGcDY/MAW4DlaWUgVLKIKCKVjfHmXNbqKiIeIrShopfV+FOMpAq7KntFCzwnNNjPCLjtKdKw850bd+UrFnMnaOt8srx0FPUr13DoS+VdpF0P/fmwp0kJlf9PutqNCmiXGPAetpCiIKYNQR2AcFSymvapjAg8YTyApesdrus1SVXf9lOfbJw1mkXlFKOlFKGJVZIKcOklCOB5BdztgO9KiJPAqOIBp7g14gYbNV27t9/QMd3ejg9xqGjJzUyzlTWLZrAhOkLuXT5CpBUeeXfQ0dZs34TtWtWdejLlXbxtAklqZkQ9LRzZzgUnrStBVu00v0xd0IEAPOBT6SU96y3aU/IKTrZwlmnfUEI0VcIYflpFEIECyG+IOkvRxI4Uq7RqyICnqO0oeJXFUaQgVRhrbYDZnGKnDmCnB7DLhnn6IkkNpkzZyI4Zw6CArORPSjQoS+VdgHG5cIVEpMepRtPIqo8bTWaFCHXKLyItBZs0crYJL7MWrjzgelSygWJYWtDG2h/E9dyuAJYr8eRT6tLrj6fnfpk4azTbgUEAZu0Me0IYCPmAfUWjnZypFyjV0UEPEdpwyi1FqPIQKpIVNuJjDTRf9Bw4uPjqZfMUEYicgfneJyMU6iAXeWViuXfTNaXSrswMhdPQmJKjhDkKUQVT1CjSU3KNdpMjvHAcSnlT1ablgCJHVsnYLFVfUdtFskbwF1tGOUfoKYQIps206Qm8I+27Z4Q4g3tWB2tfDmOy9V52kKILlLKx/nntrCZp21N1EhUEXH0osgoco2Kb1W/RhAjjIohEb/+MY4Fi5dxLewGmTIFkCdXMMLHhz4930uiipM5U4BFFecRGefSIzLOO+9w4uRpi/JKfFwcV66GsXXdUjJlCnB4fNDfLozOhSskJj2EIE8g7RhJxvEkck3UwGa6O7V0Q+Y7PJ4QogKwBTgMJAqyfoV5XHsO8BxwAWgppYzQOt7RQG0gEugipdyr+eqq7QswLLHvFEK8CkwC0mOePdJTOumUn6TTviilfM6poZdck7qhoorjVcTx4knhjk57UHP9nfageamOXJPsglFCiEOONvHojWmyiI6Opl2XD4mJjSU+Lp5aNarQ68N3uHT5Kn2+GMidu3cpWaI43w0fSBr/pFrBqgoXVes0JWOGDPj4+uLr68uCmRMc2qr61quqohKDit+npjpi0xHfu3efT/t9w+69B4iPTyA4Z3Y6tmtJp3atGPndD2zYuht/fz+ey5uL4QM+IbP2hP3XpDnMX7oGHx8f+n/anYqVa9Bv4DAWLV2Jn58vhQsVxNfXl4rl32Ddxi34+PgQlC0rI4Z+TXDOpGOeKmo0jtrfk+ZNJQZVhRmvcs2TIZUuKaIfTiaXXwfKYp4pYl0KAlf1THS3R7Y4sGuj7NXjfblswUwpTeFywFd95fTJY5+Y6FClckV56+rpp0aiUInBKHKG0QSNvp9+LMf/+as8sn+bjL53TV49d9RC0ti8cpaMuXlcJtw+Kb8b2k9+N7SfTLh9Up7ct1Y2qFtTRl0/Ki8e3SyrVako4x5cl7u3rpHl33pT1q5Zw+L//s0Lls+Tx/0hB3zV97EYVAgzjtrfk+ZCJQZPIGh5ShtKCXJN1ODmUm9xx/FSujh7EbkMCJBSXrAp5zG/kHQKe2QLgWDn7n3UqlEFgCYN67Bu/eYk+xk5Cd8oEoUqjCBnqNqr2CaSYLp0bEPJEiGk8fcnd65gC0mjwhsv4+dnVsIu82IIYTfMAgvrNu+kbo2KpEnjT748uXguX24OHTlGuVdewsfmZZD1FDRTVJTdubQqhBlH7e9Jc6ESgycQtDylDaUEueYZX+Qv+U5bStlNSrnVwba2eg9iS7bInz8vmTMFWKSwcgXnfKyxuTYJX9Dt/U9o2roLs+ctcmhlFIlCJQYVv56iOmKPBHP6zDm7JI35S9dQ8U3zCoDXb94it9W0rlw5s1tdb8GVq9eS5GvUb39SqWZjli7/h4+TGcrQC9v2lzi10BaeoDBjlF9PaUMpolzj66O/pEKkSNTWZItDR45z9twFQ44zc9KfLJw9ib9//5HpsxewZ9+BJ/apSqLQG0NqJGfYkmD8/Pzo1L3XYySNPyfOxs/Xlwa1Kzv1+esPw3guf94k+erd8302rV5Eg3q1mDZr/hPHbdv+Tp4688Q+XYEnELT+C/hPP2m7G5kzZ+L1ci/z76Ej3Lv/gLi4OMA8TGD7ssmVSfiJ24OCAqlRtSKHjhy3b2cQiUIlBqPIGar2KrbWJJjY2DiOHjtB5kwBSUgaC5atZcPW3Xw/5DPL0EZwjiCuWT1Nhd0It1zv7NmDAPv5alC3JqvXbnB4nqpIbH9btu+yu90TFGaM8uspbShFlKCe8V7b8E7bHtmiSKGCvF7uZf5ZY74hFy5ZSdUqbyfZT3USfmSkiQcPH1o+b9uxm6LPF7ZraxSJQiUGo8gZqvYqtokkmDPnztN/0HB8fASVK5a3bN+yYx/jp85nzA8DSZ8unaW+asXXWbFmMzExsVy+GsaFS1cp/eILREaaiDRFJsmX9UJR6zZsoXAh5dUSksBe+ytc0L5PT1CYMcqvp7ShlCDXCB/9JTXCcI3IG+G3LGQLmZBA7ZrVqFKpPM8XKUjvvgP5+fexlChejBY2L+P8/PwY2K8P73zQ2zIJ31EHCHArIoKPevcDID4unvp1a1Cx/Bt2bVV964VKDCpQjVfFXtX3gC978+EnX3L+/EUCMmYg0hTF9p176NPzPf73w5/ExMTStefXgPll5OAve1C0cAHqVH+beq0/wNfXl4Gfm//2+WIgm7ftJD4+nlcr1KRKpfJs3rKDyVNnIXx8yJs7F4O/7vtYDNaEmYo1GiVLmHHU/p40Fyox7DtwiMXLVlGsaBEatTQT6fQSgpLzreLXU9qQUfdeEqTSJ2i98CrXeOE2yKgI3bYineO1SLz4D8MN5Jr4H9vq7nN8P52R6nr4FFFjT44sMGHyDEb+NJodG1cQmC1rkm0q5AFVEoVeEowqgQH0EWZU47137z5fDx7BydNnEUIwfPBXvFSmlEN7vQQG1fObNHUWcxcsRQgoVrQII4b0J23atAB8NXzMY9f5f9+OYt6ipcTHJ+Dr68M7ndvT4/2urFy+hNF/z+DM+UvMnTiKUi8UBWDJqg2Mn/ro5WPo6fMsnDWREsWLMeq3P1m4ZCU3b4ZTtGgRXXlTybOzXNhrx7+NGcec+UssC27Ze9L1BCIOqJFaVPJm5Pm5BCdriqR6GD4ZPBmywNVzR2XXTu1l5Upv2yWkqJAHVEgUKiQYVWKENOkjzKjGq1fZRZXsoHJ+iSo3pttXpDSFy1493pfzZ01OlhRy9vh+i/+xv/8sX375pWQVcazLib1rZLUqFS2+DuzaKMMuHJdlSpfWnTeVPDvLhb3z+/Wnb+W4P39Ntj14AhFHlVyjkje3np8b+py4Ue2k3vK0iTJuJ9cIITILIUYIIaYKIdrabPtD7w+DI7LAiO9/4fPeHzlcjFyFPKBColCBKjFCL2FGJV4VZRcwVpknPj6eqOho4uLiiDJFkTNHdss2e9e5UMHnLP4TZAJZMmdKVhHHGstXb6JejYqW72VLv0hwzhyW9qLnOqvk2VkuVBWBXNnPKCKOKqlFJW9Gnp9LcNMqf54KZ+9PJ2JeZ2Q+0FoIMV8IkVbb9kRv2NZu2EzOnDkoHlJUl70eUoJeEoUZ+kkwKjGoEHH0xquq7GKUMo89lZsKb73u1G8iWWbBomXExcXrJpasWLOZerUqPVYvpVS4zqrtwgwVEsz0WfNo0LwD/QYO4+69e07t9cKdRBxX2oQreVOBUUSjZ336iLOoi0gpv5RSLpJSNgT2A+uFEEFPclCTKYq/xk3h4w/f1WWvlzygQqJQJeLoiUGVMKM3Xk9R/LFVuTGZTCxetsqp794932fFohlEmqJ4qUwpXQSQg0dOkD5dWooVKfjYNiGEEllGlVyjQlZp07Ipa5bNZfGcyeTMEcS3P/zm9Nz0wBMIM0aSkgw9v//4PO20Qjz6OZJSDgP+BjZjFkewC0fKNYm4ePkKl69cpVHLjlSt05Sw6zdp2roLN8NvPWbrCinBGYkC9JNgVGJQJeLojVdV2cUoZR5rlRt/fz9qVqvMgYOHnZzdI//NGtfnzNlzTu0Blq/eTL2ajz9lW0PPdVa1V21v2YMC8fX1xcfHhxZNG3H4yDFdsSQHI4g4T0JqUc2zMxhFNLLA11d/SYVw1mkvBZKI+0kpJwGfAjGOdpIOlGsSEVK0CDs2rmD9ygWsX7mAXME5WDBrIjmyB9n60U0eUCFRqJBgVGJQIcyoxKui7ALGKfMkqtyYTFFIKc1xFCqY7D7nzl+0+A8KzKaLLJOQkMDKdVupV7PiY9siIm6TOE3VWd4S7fXm2RUSzI2b4ZbPa9dveuI5x0YRcVRJLSp5U4FR55cEz/iYdrJT/qSUjzMbzPWrhBDD9R5EhYhgDRXygAqJQoUEo0qM0AuVeMFMavms3+Akyi6OoEJgUDm/MqVLUqtGFZq07oyfry8lihejVfNGlu32rvPiZSvZs+9f0qRJQxp/f3IF52TTlu1JFHHe6zPIoogDsOfAEXIHZyd/3txJjv/dqN9ZuGQFpqgoSr78NpkzZ6Jd6+bJ5k0lz85yYe/8du/dz4nQUyAEefPkZsiAJyMDGUXEUSW1qOTNyPNzCal02EMvvMo1XjwdeBVxvLAHd5Brxr2nn1zzzl+proc3XLnGFiokEZVJ+6BfBQaMUdpQJcyoxGyUAouKrVsVY6w64kTCxfETJ4mMjCRbYDa2rVsKwMifRrNh4xazGk6+PIwY9DmZMwUQGxvH10N/5NiJU8TFJ9C4XnXe69qWs5dv0rvvQIvvS5ev0L1rR44dP6GrzeltnyokEdV2bBRhRsVWNWYj2pDLeMaftJ2NaQdjVghuYKc8/tZQB4Z99zNvl3+DVYtnsXjulGTHRJs2qsu4MaN0+54yfQ5FCjv2l4j4+HiGDP+BcX/8yPKFM1i2ai2nz9h/QaZimyZNGiaP+40lc6ewaM5ktmzbyb+HjrglZhXfRp2fyvVQidfX15cvP+vJmF9HMnn8aO7evWuJofwb5Vg2ZxxLZ/9NwQL5+GviTABWrd1ETGwsS+eMY8G0P5i9YDmXr4ZRuGABFs+ZzOI5k1kwcwLp06Xj6LETutuc3vaZGPOKhTOYPW0sM2YtcEveVOyNus6qMRvVhlyGj4/+kgphuHKNNVRJIiqT9lXUZYxS2lAl+KjEbJQCi1FqLa6QWsq98hK5g4NJ45/GQrio8NbrFjWcsi+WIEybWyyEwGSKIi7OTPbx9/cjIGOGJH537NpLnjy5OHo8VFebU2mfKiQRVVKOEYQZVXKNSsxGtSGX8V/utN2lXJMIVZKIClRILUYqbagQEtQUcYxRYDFSScQVckbY9RtEx0TbJVzMX7KKiuVfA6BWtYqkT5+OCrVaUqVeO7p2aEHWLEk7g+Wr1vL6qy/rbnOutk/DSCJO4CnXOUXUaFTwX+603Q2jSCKepAKjl5DgSsyeosCiF66QWgb973tyZA96jHAxZvx0fH19aVinGgCHjp7Ax8eHLatms27pVCZMm8ely1ct9jGxsazftJXXX3tFd5tzpX16AgnGCxu4kVwjhJgghLghhDhiVTdICHFFCPGvVupabesnhDgthAgVQtSyqq+t1Z0WQnxpVV9ICLFLq58thEjjLKYU7bRVSSJ6oawukwJKG84ICa4ScfT49jQlERVSS7UqbxOQMWnnt2DJP2zcspMf/tfPsu7IslXrefutcvj7+xEUmI2Xy5Tk8LGTln02b91ByeLFKF7sed1tTrV9Gk4ScQJPuc4pokajAOEjdBcdmATUtlM/SkpZVisrAIQQLwCtgZLaPn8IIXyFEL7A70Ad4AWgjWYLMFLz9TxwG+jmLKAU7bRVSSJ6oUJqAeOUNlQICaoxG6XAYpSSiKuklhZNGybZtnnbTsZNmc2YUUNJn/6RGk7uXDnZtedfACJNJg4ePk7hQo9moC5fuYZ6dWootTkV2xQhiTiBJ1xno327BDeuPSKl3AzoXSi+ETBLShktpTwHnAZe08ppKeVZKWUMMAtoJMxPIFWBedr+k4HGzg6SIutpW0OFJOIqKccZjFLaUCXMqMAoBRaj1FpcIbVkCghg+qz5xMfH83qlOnz28YeMnTCFmJgYunz4BQBlSpVgyFef0K5lI/oN+p56LbohpaRpw1oUL2qOOzLSxPadexgywLyPSpvTa6tCElFtx0YQZlTJNSoxG9WGXIaCyroQojvQ3apqrJRyrI5dewghOgJ7gU+llLeBvMBOK5vLWh3AJZv61zEvBXJHShlnx95xzK6Sa3TDS67x4kkRF6nf1i+DcxsvPBduINckzOuru8/xaf6d0+MJIQoCy6SUL2rfg4FwQAJDgdxSyq5CiNHATinlNM1uPLBSc1NbSvmOVt8Bc6c9SLN/XqvPD6xMPI4jGP6k7YhkMW3mPCZPn83FS1fsqtYkt68jqJAH9CrXeIrqiGou9JJ2zp6/8BgZpdeH79K5/eNxq9jqidfe+d+5e4/efQdw5eo18ubJzc/fD00yRcza79WrYcTFxZEvb27L/j//+jvrNm3Hx8eHoGxZGTH4c4Kt1vw+dPQErbv04qfhX1O7ekU27zxI774DiI6JRQioW6s6I/83AICpM+YyffZ8fH18qVTxLfr2/kh3Luyd28rV6xk9Zjxnzp1n7vRxlCpZwu41USGgeQJhRrXdq8TsEgwm10gpLQP4Qoi/MU+NBrgC5LcyzafV4aD+FpBVCOGnPW1b2ycbgKHFkQLG0f3b5KXTh5NVkFFRz1BV5tCrXOMJqiOquZAmfeo59nL41ptvyMtnDj+xrZ547Z3/yOGD5V+jf5LSFC7/Gv2T/G74YId+t29cJevWqSWrVqls2X7/2nEp71+U8v5FOXnsL3JAvz6W73F3zskObVvKd7q0lysXTpPy/kW5Z9s6uXr5fClN4fLs8X2yRPHi8sDOjXLHpn9kpw5tZfTdq1KawmX45ZNKubB3bqeP7pVnju+T7du2kof2bnHoT69KkWqbV2lvRqkfOfXrhj4nfv4XUm/R4w8oCByx+p7b6nNvzOPYYH4BeRBICxQCzgK+mB+Oz2p1aTSbkto+c4HW2uc/gQ+fSLnGHoQQORXt7ZIsXigRQj6bBYH07msPquQBvfAE1RFQy4UKaccaO3btJX/+vOTNk/x10WOrJ157579uwxYaNzTPoGrcsC5rNyS9htZ+y5Z+ESRJvFpPuzOZTEm2TZ29iFrV3ibI6r+6V18uQ42q5iVgCxUsQPr06Tlz7gIz5y6ke9cOpEljnoEVFORYiNheLuydW5HCBZ2ulKdC8PEUwoxKuzfqPk0CN87TFkLMBHYAIUKIy0KIbsB3QojD2jIfVTB33EgpjwJzgGPAKuAjKWW89hTdA/gHOA7M0WwBvgD6CCFOYx7jHu8sJmdrj9i2VAHsFkK8hHk8XNdb1fj4eJq26crFi5dp26qpkgKG3n3tTfA/dDi5tY3NyjVCCFo1b0Sr5o11x6QHRhAu9OYikbTz8KHCWDBmMkr92jXcZuvKdb8VEWGRMMuRPYhbEY83MWu/DerWZP+/SZfIGfX7BBYtX0OmgIxM+cs8NHT9RjhrN2xjyl8/cPio/Wl8a9dvxhQVRY2qFZkyYw579x9k1G9/kTZtGvr26UHpF1+wu59K3pzBmuBzIvQUJV8oTv++n5AhQ/rHbNXbvH646ttZuzcyZgvcODwipbQ3Nchhx6ppDgyzU78CWGGn/izm2SW64eynJhzYZ1X2Yn67uV/7rAtPQgoxilCiqlyjAqMIF3py4SrRKJGMUrtmVbfZPum1E0LY/W/C2u+Jk6eJjkm6tHvvj7qyacVMGtSuyrTZiwEY9sMffNbrHYfs0/MXL9H7iwF8/NG7ZM6cifi4OO7evcecaX/Tt3cPPvl8gGUdb2uo5E0PUkKlyCh4DNHoPy6C8DkQCjSUUhaSUhYCLmufHc4XcqRc8yQKGO4klICaco0KUoJwkVwuXCXtJJJRsiczDOCKrbN4bREUGGgRFrhxM5zAQMfLsmbOnImypV90SDVvUKcaq9eb//U+cvwkffoNo2r9dvyzbjODv/2VtRu2AXD7zl2atu5C3VrVeU97KRYcnJMa1SohhKB0qRfw8RHcvn3nsWOo5sIZVAg+nkSY0dvuU4SI84yLIDhbe+RH4B1goBDiJyFEJszTXJKFtFKuad6kocsKGEYRSlSUa1RgJOFCby5USTuJSCSj6IEeW1eVT6pWrsCiJeb/IhctWUG1Km8n63ffgUOkSeNv2X7+4mXL53WbtlO4oPml/fql01i/bDrrl02nVrWKfPNlL6pXKU90TAz1m7ajRPFillkjANWrVGTXnv2AWX0nNjaObHZmOKnkTQ9UCD6eQphRafcpQsR5xjUinU75k1JeBloIIRoCawClibCOSBZTps9h3KTphN+KoGGLjlSq8CbDBvXTta/dE1GY4K+iXOMJqiOquVCFLRnFHbZ64rV3/t27duCTz79m3qJl5Mmdi5+//59Dv1evhZGQkEBMTIxl/81btnDuwmWEEOTNHczgrz5JNs4xYycRfiuC+/cfUPq1ygB83vsjWjVvzFcDh1G/aTv8/f35dujXFgq9nlzYO7esWTIz9NufiLh9h/d6fEaJkKKM//Pnx/bVS/DxFMKMSrtXjdklpNKFoPRCiVwjhEiPWaH9iBCii5RyotOdvOQaL1ISKkQc8JJxPA3uINesHqqfXFNzQKp73FYi10gpTUDialeDAaedtiOSxVffDOfIsRNIKSlUID8jhn5tmcqVCKOIA0aSAYyK2UgVH732KgQf1RzrjcGZ32thN+g7cCS3Im4jhKBlk3p0atuUfoO/Z9XazcTGxlIgf14qVXgdKSUbtuzC39+f5/LlZcSQ/mTOnMmsijN4BMeOhxIXH0/jBnUsY92Tp89m7vwlSAkN6tXSpYijeu30Er/AM+6R/xq55mnDcLmxRAWTjBkyEBsbR9vO71OxwhtJ3jCP+P4Xps+cl+TiJaphTPzrF4KDc9K8bTeqVn6b54vYH99r2qgu7ds054v+Q5zGlKg6UrJECA8ePqRZ666Uf+M1u75V4jAyZhVbeKSI8+DBQ7fZO7qWZUs/zrpVybFKDM78+qYN4MvPP0m6vXx5QkKKc+rsRUyRJpYvnMGtWxEcDz3Fpz3ewc/Pl+9//Zu/xk3g817vsmrVOmKiTSydPRaTKYp6LbpRr0YFIqMlc+cvYe708fj7+1G5VhPat27Orz8OJyY2lihTlN2YVa8dwORxo+2yhK3hKfeIUfeTy3jGh0cMlxtzRLJI7LCllERFxzz262gkccAoMoCRMRul4qNi74oaDegjGumNwZlfR9sPHDxMxzYtLOPSQUGByqo4Z85doHSpkqRPnw6TKYro6Gh8tMWJkiPBGKXW4in3iMeRa57xF5EpIjfmSMGk34D/Ub5qfc6eu0CHNi2S7JNSahiukAGehjqIClQVcVTsXVGj0UM0Uo1Zj1/r7ecvXOLQ0eNcvHyV9l0/5NCRpIQOPao4xZ4vzL79B7l95y6nz54nLi6ehYtXuF2FKZH41bR1F2bPW+TQylPuERXbFIn5v9xpSzfJjTkiWYwY+jVb1i6hSOECrPhnrVLg7oDHkAHcCFVyjaq9K2o0znLsCiHImV/b7fFxcdy/94Dn8uV5jCyjVxWnSOGCvNOlPd3e/4TBw77HFBVFSMjzbifBGEn8UoXKPeIx99N/udN2N+yRLHx9falXuzqr125MYmv0JHwjyACeoOChSq5xlYyjokbjLMeqMTjza297cHBOKpR/HSAJWUZVFadF0wYsmDWRv//4iYwZM1DulbKA+1SYzLHqI355yj2iYpsy94hQKKkPhnfa9kgWhQo8xwWNBCGlZP3GrRQulJR4YeQkfKPIAJ6g4KFKrlGxd1WNxlmOVWJw5tfR9upVKvLvIfPEp0SyzJFjJ5RVcW7dMq+FEhsbS2xsnGV5VXepMKkQvzzlHvE4cs0zzog0fD1teySLyhXfom2XD3j44CFSSkJCijK4/+dJAzOQOGAUGcDImFNE8cMJXFGj0Us00gtnfh1t37VnH+s3bSU6Oob6zdrToW0Lhn77k7IqTs9P+3Pn7l38/Pz4qu/HDBr2g1MSjMq1UyF+eco94nHkmlQ67KEXXuUaL/7b8KrieBbcQa7Z+qN+ck2FT1NdD5/iGpFGqXKoTPA3ktRihHqOahxGEiPAPSQYV/2CcYo/0dExtHu3NxcuXeHhg0iyZMnEjrXzk9hMmDyDkT+NtqgtLVn+D39PnAZSkjFjBgb1/5ziIUWTnFPD5h0IvxVBUFCgrlxMmjqLuQuWIgQUK1qEEUP6kzZt2sfsjCa16LU38h5xDamuH1ZCis9CH/bdz7xd/g1WLZ7F4rlTKFKooF27xEn44/74keULZ7Bs1VpOnznn0G/iBP8VC2cwe9pYZsxa4NC+aaO6jBszSle8KraqMYOZRLF4zuRkO2zVOFRyoWKbiEQSjLtiUPELarlIJAQtmTuFRXMms2XbTsvYNmB+etZKmgxZmDzud/74eSQzp/zFw8go/j121rL92qVzbNu+gzy5cpqf0GMfki84G9P++p6ls/7ig65tGDB4BMQ+IgdNmT6HggWeo0jhgrpycf36TabMmMv8mRNYtmA68QkJLF9lf2aVSo5V26aKvdH3iDKe7feQLinXBLl6MCNVOVQm+BtFajGSOOAJxAhwHwnGVb9gnOJPom25V14iY4aMIGUS2xE//cnnvd5NsnDUy2VKkkVrw2VLlSDM6hwTz6l9m+ZkCggA9OUiPt5M6omLiyPKFGURhbCFkaQWFXtPuUcs+C9P+RNCfCuEyK59flUIcRbYJYS4IISopHowa1UOZ4SEJ5mEb4RqjB6ox6yPRPEkcCcxAowhwbjqVy9UCEGJts3adCFDhvQW27UbNpMzZxDFixVxuO+8xauo+FY5y3d75+QsF8HBOejaqQ1VajWhQvWGBGQKoMJbrzs9R3eTWowiwaQMucZHf0mFcBZ1PSlluPb5e6CVJvdeA/hR9WApocrhMRP8dcBoEoW7iRFGkGBc9asCFUJQou3sqWOJiorm5KkzmExR/DVuCh+/39nhfjv3/su8xSv5rOe7gP1z0pOLu/fusW7DFtatmMeWNUswmUwsXrYq2fNLTW0+RfBfftIG/IQQiS8r00sp9wBIKU9iVhy2C0fKNUarcqSEakxy8BT1HDCGGOFuEoyrfl2FioJOQEAA6dOnZ8v2XVy8fIXLV67SqM17VG3QnrAbN2na7gNuhpvnbJ84dZavh/7EHz8OIVvWzHbPacfuvdRq0MppLrbv3Eu+vHkIDMyGv78fNatV5sDBww7tjSK1GEWCSRFyzX+80/4DWCGEqAqsEkL8IoSoJIQYDPzraCdr5Zru3TpZ6o1U5TBSNUYvPEE9B4wjRriTBOOqX1WoEIKsbaOjY4g0mShcsAAhRYuwY+MKs/rN0mnkypmDBdPHkCN7IFfDbtDz88F8N+QLChXIZ/ecfvx2MFmzZKFOrWpOc5EnVzAHDx3FZIpCSmm+Rxy8rDeS1GIUCSZllGsUSipEslP+pJS/CSEOAx8AxTT7osAiYKgrBzRKlUNlgr9RpBaj1HNU4zCKGKECo/yCcYo/ibaXr1wj0mRCygS++d93hN9y7P/3v6dy5+49Bo/8FTAPryyY+kcSm5Onz3L9xk127t7nNBdlSpekVo0qNGndGT9fX0oUL0ar5o3sHttIUouKvVH3iMtIpU/QeuEyucarXOPFfw5WU/mcwt87tuwS3EGu2fuHfnLNqx8mezwhxASgPnBDSvmiVhcIzAYKAueBllLK28I8regXoC4QCXSWUu7X9ukEfK25/Z+UcrJW/wowCUgPrAA+lk465Sd5fTrYlZ0mTZ1FvSbtqN+0HX2+GEh0dLRD283bdlKrYWtq1G/B2PFTnPpWsb937z69Pv2K2o1aU6dxG4fjhv0GDuPNynWp37Sd0+Or2F8Lu06Hbj2o26Qt9Zq0Y/L02cnaG5kLT7BVybNRflWvNcCXg77nhddr8VLFhpa63/6awtvVG9KoZScatezEpi3bk+xz9VoYL71RjfGTZ1jqJk+fTf2m7ajXpB0Dho7UfX5V6zSlQbP2NGrZiaZtuiZrq5I3lfZpdFtWhnvHtCcBtW3qvgTWSSmLAuu07wB1MI9EFAW6A2PM4YhA4BvgdeA14BshRDZtnzHAu1b72R7rcUgpHRbgkINyGIhObl9LMYXLxBJ2/risUrmSNN2+IqUpXPbq8b6cP2uytLZJLHEPrstqVSvLi6cOyuh712SD+nXlqSN77Nq6Yt/304/lnOkTpDSFy+h71+Td6+fs2u3eukYe2b9N1qtTy6EvV+yvXzwhj+zfJqUpXN4PvyBrVq/mMF4jc+EJtip5M8qvK9damsLloAFfym6dO8iyZctY6n796Vs57vfvpbx33m7p+X5X2fODbhab0EO7ZL06tWRkxGUZdeeKLFWqlNyx6R9d51elckV56+ppp3Gq5k2lfbq1LevpU5yU+H1/SL1Fjz/MT9RHrL6HArm1z7mBUO3zX0AbWzugDfCXVf1fWl1u4IRVfRI7R8Vw5Rpb6CUOGEkGUCH5qKqO6LX3FGKEJ9iC/rx5ijoQmMkzZ89doGF95w9HiVi7cRt58+aiaOFHL0OtFXGOnThJcM7sHD563K3kEyPJaqlZucZ6pptWuus4QrCU8pr2OYxH0ot5gUtWdpe1uuTqL9upTxYpolyTCBXigJFkABWST0rgaRIjPMFWBZ6iDgTJE4Kmz1lCg9bv0W/wj9zVZqQ8jDTx9+Q59Hi3QxJba0WcS5ev8uDBQ8LCbgDuI2ilFFnNI5RrFKaPWM9008pYlSNp488p+t4uRZRrEuEKccAIpATJRy+8xIjUieQIQW1aNmXNokksnjGGnNkD+XaUuR8YPXYqndo2JWOG9EnsrRVxxvw9iaxZs1i0J50htRG0UgTGz9O+LoTIbT6UyA3c0OqvAPmt7PJpdcnV57NTnyxSlMepQhwwkgygQvIxEp5AjPAEWxV4gjoQJCXP/O/bnzCZoiyEoOxBgfj6+uLj40OLJnU4fPQEAAePnOCHX8dRtUEHJs9cyF8TZzFt9mLgkSLO8MFfERMTQ8EC+XWdn5EqN6lWucbHR39xDUuARAJKJ2CxVX1HYcYbwF1tGOUfoKYQIpv2ArIm8I+27Z4Q4g1t5klHK1+OT8/VqF2BCnHASDKACsnHKHgKMcITbFXgCepAkJQ88/WXfUifPp2FEHTjZrjFbu2GbRQtUhCAGeN+Yv3SqaxfOpVObZrwXpfWtG9lnoOdqIiTPSiQsOs3eLlMabcStIwkq3mcco0bIYSYCewAQoQQl4UQ3YBvgRpCiFNAde07mKfsnQVOA38DHwJIKSMw81r2aGWIVodmM07b5wyw0mlMKS2C8Osf41jxz1oLcWDYoH6kSZPG7q6btmxn+He/WCbhf/Bu52QPpWJ//MRJ+g/+NgnJx95LKGviQFBgoFPFGL32e/cfpF2XDyhWtIhlTDQ58omRufAEW5U8G+VX9Von7rN1x27u3btPzhzZ6fnBO+zeu58TJ0JBCPLmDmZI/4/JmT3p4pi//TWFDBnS061DC/APoG3nDyyKOHVrVWPh4hVOz+/S5SuPEbTcdT1U2qdb27I75mkfHq9/nnapbqmOieNVrvHCCyMQ+0C/rX+AcXGkNrij0z4yQX+n/WLXVNdpP5W1CePj42ncshPv9fgsWTvVSfh6/arYqxAuoqOjad62Gw1bdKRek3b8+sc4h7ZGEhKMJJTojcMVoore62dUzCrXRDmG7Xuo1bQrNRp3ZuykWQBMmj6fei3fTUI0mzZzHjXqtyCkzFtE3L5j2f/MufO06vAuL75aKQkpxyiyk4q9Si5U271L+I8vGGUI9CiUuKJwoVf5RMXerSopVjBSdcQTlHlU/CbCCOUalZjdqn7kH2Ap8T7pGfLd74wbM4rli2aybPVmdh4IZcrsJcyfOYll8yYSHx/H8pWreLlMCSb++QN5cwdDQoylZM2Unv59e9Kt06MxY5Vz8xTlGlcUjdTxbK8YleKdtl6FEtVJ+CrKJyr2RqmkGElI8ARlHleIKkYo16jEbJT6kb0Ytu7YlZRoFmUmmr1QvCj58uR+zEdQYDZKlyyOn59fsn7dRXYy6lqrKhq5BB9f/SUVwplyzatCiA1CiGlCiPxCiDVCiLtCiD1CiJdcOaBehRLVSfiqyidGKaWoqKQkwjMICc5hZBxGXQ9XY3an+pG9GCIfmh4RzWo0IyAggApvlkvGiz6/7iI7pUSbM05h6r/9pP0H8B2wHNiOmRefBfMCKX8kt6M9GKVQourXSKUUFZUU8CBCwlOE0co1qkiJaxIdE/OIaLZ6vplotny1IcfyRBia4//4mLa/lHKllHImZsbmPMwf1gHpHO3kSLlGRaFEZRK+qvJJSiil6FFJ8ShCgg4YFYeR10M1ZiPUj+zFEBUVlZRoVrUiBw4efWK/7iI7GdnmDFeY+o9rREYJIWoKIVoAUgjRGEAT9Y13tJMj5RoVhRKVSfiqyidGKaWoqKSkRkKCUXEYqVyjErNR6kf2YqhSsXxSotnu/RQpZL+tqPh1F9nJqGudMgpTz/bwSLLKNcD7mIdHEoBawAdCiEmY+fHvGhpYSihc6IBRKilGqo54gjKPil9VGBWzUepH9mKoX7cmZ89f1BRqfChRvCitmtVnyoz5jJs8k/BbETRs2Y1KFV5n2Dd9uRl+i2bt3uPBw0h8fHyYPG02KxbO0H1unqJcY6SikQUidb5g1Auvco0XXjxtJMTot/Wxzx5+ZuAOcs2pefrJNUWbp7rH7RRXrvHCCy+8MBTP+IvIZIdHhBCHHG3i0cLfunEt7Dp9+w/lVkQEAkHL5g3p1K6VQ/vN23YybOTPJCTE06JJA7p36+jQNjo6mnZdPiQmNpb4uHhq1ahCrw/fSVFb1Zj7DRzGxs3bCArMxrIF0x3aqfpVsVeJQTUOT7D1hDictiGbp2dbv9WrVaJ334HmjTKBS1eu0euDLgTnzMHoPydx5twF5k4dQ6mS5tk3sbFxfD3ke46dOEVcfDyNG9ThvW4dlfNWtU5TMmbIgI+vr1mweOaEJ86Fah/gGlJnZ6wbTmR2rgNlgQI2pSBwVVVuzEiJrYTIm/LBrYtSmsJlzL0w2bxpY3lg18YUtfUUiS0VexWJLU+QJkuN0mvubENx9y7Jt958XV4+tV+ePrxDnjm6U7Zv00Ie2r1eyodXpXx4VS6ZN0V+0uM9KU3hMjLisqxSuaI8H/qvUt6kyRgpM6d9gDvkxk4vlHqLO46X0iVFlWuMZAGqsBGNsvUUiS2j2GyeIE2WGqXX3NmGduzeT/58ecmbJxdFChegcMHnHj8eAlNUlJlpGR2Nv58/Fy9dNkzmyyjWqct4xodHUlS5xhpGsABV2IhG2HqKxJYnxOEJtp4Uh7va0PJ/1lO/dlWHxwGoVb0S6dOlo0L1hlSp1YSundrwMDLShTZhrJSZYYxI4au/pEI8ldnlRrGhVNiIRtl64YU9uKMNxcTGsn7TNmrXqJys3aGjx/Hx9WXLmiWsWzGPCVNmWUQWVGCklJmRjEhhFuzVVVIjUrzTTgkWoB42ohG2niKx5QlxeIKtJ8WRiCdpQ5u37qBk8WJkDwpM9hjLVq7j7bdew9/fj6CgQF4uW4q79+4rx2uUlJnhjMhnnFyTop22kSxAFTaiUbaeIrHlCXF4gq2nxOGuNrR85Rrq1a7m8FwTkTtXTnbt2Q+YZcgOHj5KpbffUsqbUVJmKcKIfMZp7M4YkW6FkSxAFTaiUbZGMRc9hc2m4tcTbD0lDne0ochIE9t37mFI/94W2zXrtzB05C9E3L7Le736USLkecb/8T3tWjWm3zcjqdekHRJJ00b1KFkiRClvtyIiHpMyq1j+jSfORYowIlPpE7ReeOXGvPAiNeFZZ0+6gREpL67W3eeI52qmuh4+xf8/8AR5pGfd1ijZLCMlxIyQBFP17Qm2TiXrfNIkKZt37KdW447UaNiOsRNngU8aJk1fQL1mXajftC19+n5NtOk+n345kFoNW1G/aVv6DRxKbHQkJMSwZNlyGjRvT4Nm7WjdsTsnQk95TC5cxjM+e8QZuSYLZnn4E0AEcAs4rtVlVSXXPOskCk+w1UVgcJFco2KbWCb89Zvs8/FHsnu3zilDzvDAa5KSRJwdm/6RVSpXkqbbV6R8eFX2+qi7nD9zvNy4aoFMeHBFJjy4Inv3fF9OnzhGyodX5b5tq+Wda6FSPrwqN65ZKps3bfx0c+EG8knCpXVSb3HmCzgPHAb+BfZqdYHAGuCU9jebVi+AX4HTwCHgZSs/nTT7U0AnI8k1c4DbQGUpZaCUMgiootXNUf2BeNZJFJ5gC8bJZhklIWYkOcMTrklKEnEcyZhVevsNyzS30i+WsOTs5bIvkiVzJgDKli5J2PUbHpMLl+H+F5FVpJRlpZSvat+/BNZJKYsC67TvAHWAolrpDowBEEIEAt8ArwOvAd8IIbK5enrOoi4opRwppQxLrJBShkkpR2KmsyvhWSdReIKtLYyTdHIOo6TlEqHn3DzhmqQkEceZjFlsbByLl6/m7bdee8zfvIXLqFjhTUPPL2Wk8wyf8tcISFR3mQw0tqqfIs3YCWQVQuTGvKz1GillhJTyNuan89quHtxZp31BCNFXCGHJshAiWAjxBXDJ0U6OlGu8SFk8TSkzoyXEnmWZtich4jiTMRs8YhSvvlyaV18unWS/nXsOMG/hUj775EO3ncdTg3tp7BJYLYTYJ4TortUFSymvaZ/DeLR4Xl6S9ouXtTpH9S7B2ZS/Vpgf/TdpHbfEvIjUEqClo52klGOBsUCS2SPPOonCE2wTYTyBIXkkSoht3rqD6OgYHjx8yGf9BtlVpDGSnOEJ18QdRJxiRYvo8mstY0ZCjEXGrFG9moz+axIRt+8w+uuhSfycOHmGr4d8z9+//0S2rFk8MhdKUHjBqHXE3a2qxmr9VyIqSCmvCCFyAmuEECes95dSSiFEis6Qc7b2yG1gItADyK+Na5eQUn6BeWxGCc86icITbCGlJJ2Sh1HScqrn5gnXJCWJOI5kzOYuWMbW7Xv4acTAJMNVV69dp+dnA/hu6FcUslp8yhNy4TIUnrSllTSiVqw7bKSUV7S/N4CFmPu969qwB9rfG5r5FSC/1e75tDpH9S7B2XravYCPMM8YGSeE+FhKuVjbPBxYpXSwZ5xE4Qm2YJxsllESYkaSMzzhmqQkEceRjFnZt2qTJ3cuWnUyD3/UqFqRHu914vexk7lz5x6DR4wC4WNZN9sTcuE63DOTWQiREfCRUt7XPtcEhmAeaeiEeRZdJyCxT1wC9BBCzML80vGulPKaEOIfYLjVy8eaQD+X40qOXCOEOAy8KaV8IIQoCMwDpkopfxFCHJBSvuT0CF5yjRdePB2oEHHAM8g47iDXXN+ln1wT/LrD4wkhCmN+ugbzA+4MKeUwIUQQ5tlzzwEXgJZSyghhXoFqNOaXjJFAFynlXs1XV+ArzdcwqUeq0QGc/ST5SCkfAGhraFcG6gghfsLFV69eco3xtp4QhyoR51nOxVOz1UHEOXvxGo1av2suLTrw8lvVmTR1OsePH6Vl+240atGBpq07c+jQQUiIYe269TRo3p5GLTvRtE1X9u4/6JwQ9ATn5xrcM3tESnlWSllGKyWllMO0+ltSympSyqJSyupSygitXkopP5JSFpFSlkrssLVtE6SUz2vF5Q470VlyE8vXA2Vt6vyAKUC8rsngXnJNipNrPCEOT1DE8ZRcpBZba1WcLh3byo3/LDSTblYtkO3btJDy4VX54OZpmfDgipSmcHn84E5Zq2Z196o7uYNcc3231FvccbyULs6etDtintJi3cnHSSk7AhVVfyC85Jr/Ti48QRHHSN/Poq21Ko4QgofaKn/3HzwkZ47sAGTMkMGyDrXJZLIQdoxSd3IJz/gqf85mj1yWVsQam23bVA/mJdcYb+tJcejFs56L1GJrrYrz1Wc9+O7nP6lUuwUjR42hT893LXZr1m+hdqPWvNfjM4YPNg/TPm11p6TwUSipD6kzai+88MKtsFXFmTl3Mf0+/YhNq+bS77OP6D/4O4ttjapvs2rxLH7/+Vt++f1vwMPUnf7LGpHuhpdcY7ytJ8WhF896LlKDra0qzsJl/1CzmnkEtE6Nyhw6egJblHvlJS5dvkrE7TuWuqel7pQUXuUat8FLrvnv5EIFz3ouUoOtrSpOzhxB7N73LwA7d++n4HP5ALhw8XLihASOHg8lJiYGmZDw1NWdkuAZf9JOUeUaL7nmv5MLT1DE8ZRceLqtPVWcoQM+Y/j3o4mLiydt2jQM+fpTAP5Zt5nFy1bj5+9PurRpGPXdUG7eijBM3ck1pM7OWC+8yjVeeOGFGZ6giuMOck3EUf3kmsCSqa6HT9HhEVXVES+JwjVbT4nDE2w9geTjCTHosrUi4ly7cZsO7/ahbrPO1GvWhckzFzok4vz82xgz4aZFB7q+14vrYVdtVHHaW1RxXFEeUsYzPjzijFyTGRgBTAXa2mz7Q5Vco6I64iVReHPhjlx4AsnHE2Jwt/qRNRHn/vVTUj68KuXDq3Ly37/JAf0+TaqKYwq3qOI47QPcQa6JOC71lqdNlDGCXDMR8wDRfKC1EGK+ECKtts2+NHMyUFEd8ZIovLlwRy48geTjCTG4W/3ImohjvZ65yRRlId/YU8VRVR5yCc/4k7azTruIlPJLKeUiKWVDYD+wXlsw5YngTHXES6JwzdZT4vAEW1V4QhyemDd796o1EQdg1OhxVKrdgqUr1/DxB10f82GtipOcX/fgvz3lL60Qj7ie0rxgyt/AZsBhx+1MueZZVh3xwotnCfbuVVsiDkDvHu+wadVcGtSpwbTZC5P42Ll732OqOEb2AUL46C6pEc6iXgpUta6QUk4CPgUcvmqWVguLd+/WKck2vaojXhKFa7aeEocn2KrCE+LwpLw5uldtiTjWaFC3OqvXbbJ8P3HyDF8PHsEfP4+0qOIYr6r0H37SllL2BS4LIaoJIQKs6lcBvVQPJqV+1REvicKbC3fkQgWeEIen5C25e9WWiHP+wmXL53Ubt1FYU8CxqOIM+8aiiqPSB7iMZ3xM25kIQk/MUmPHgbLAx1JTrhFC7JdSvuz0CFbztPfuP0i7Lh9QrGgRi+RRcqojm7ZsZ/h3v1gm4X/wbudkD6Vi/yzbekocnmBrTfIJCgx0qrZjRByeEIOqraN7tdwrL1GldhPWLp1Bpkzm57ienw7k3IWLCB8f8uYOZnD/PgTnzEH/wd+xet1m8uTJDZjXJ/nq84+T7wPcME+be+f0c0MyF0p1PbdXucYLL7xQh1FEHHd02vcv6O9zMhVIdZ22V7nmWSFGeGAcnmDrKXGkNlun9jaqOJOmL6Besy7Ub96FPv3+R3SsfFTXtC19+n5NdOR9duzYQZNWnajftC1f9B9EXHQkxEdbSkhISLmQkJC4kJCQ5k4DdIhne0zbGbnmP69ckxqJEZ4QhyfYekocqc1W1T7s/HFZpXIlabptVrTp1eN9OWHsb4/qHlyRvT56V86d9res+HZ5efboTikfXJE/fz9Uzpk2VsoHZpu4uxdlsWLF1hcrVmxFsWLFmrtMQLl/SeouHkCWcTe55j+vXJMaiRGeEIcn2HpKHKnN1hX7+Ph4oqKjiYuLI8oURfagQKu6eKJM0WRInw5/f38KFcgPQPnXX2X1ukc+p85aCGYi3w2HB9KDZ/xFpFe5RodvvfAUYoQnxOEJtp4SR2qzVbUPDs5B105tqFKrCRWqNyQgUwAN6tZ6VFezGQGZMlKnZhXi4+I5fCwUgFXrNhF2/YbleGs3bAEY4zAo3Xi2h0dS5+xyL7zwwmNw99491m3YwroV89iyZgkmk4mZcxc+qvtnHiZTFEtWrOWnEQMY8cPvNO/wARkzZLDMIBn2w+981us9QkNDE544oP/yk7a7kRoJJSrwFGKEJ8ThCbaeEkdqs1W1375zL/ny5iEwMBv+/n7UrFaZNes2Ja2r+jYHDh3hpTIlmTHhV+ZNHUO5l0tTsIBZXOHIsVD69BtCSEjIeaA58EdISEhjhwEmC/c9aQshagshQoUQp4UQX7oWj3vhVa55BokRnhCHJ9h6ShypzVbVPk+uYA4eOorJFIWUkh279lLs+cJJ63bvp0ihAtyKuA1ATEwMf0+aSetmDQFYv2wm65fPIjQ0tCDmqcUfhoaGLnIYYHJwkxq7EMIX+B2oA7wAtBFCvOBSTG6EV7kmFSiweEouUputp8SR2mxV7cuULkmtGlVo0rozfr6+lChejD693idDhgxanQ8lQorSqml9Rv0+gY1bdpAgJW2aN+TN15zz85ThvjVFXgNOSynPAgghZgGNgGPuOoAr8CrXeOGFF8YiPlq/bcY8Tz7QrNLnJEPmEUI0B2pLKd/RvncAXpdS9njiGJ8ET2uuIdD9WbX1lDg8wdZT4vAEW0+JI7XZGlmA7sBeq9LdaltzYJzV9w7A6Kce81NM1t5n1dZT4vAEW0+JwxNsPSWO1Gb7tArwJvCP1fd+QL+nHZd3yp8XXnjhhX3sAYoKIQoJIdIArYElTzmmlH0R6YUXXniRWiCljBNC9AD+AXyBCVLKo085rKfaaY99hm09JQ5PsPWUODzB1lPiSG22Tw1SyhXAiqcdhzWMnz3ihRdeeOGF2+Ad0/bCCy+8SEXwdtpeeOGFF6kI3k7bCy+88CIVIUVeRAohimOmf+bVqq4AS6SUx93kOy+wS2oqO1p9bWkWILa2fQ2QUso92hoCtYET2ssGZ8eZIs3riDuzq4CZ/npESrnaZtvrwHEp5T0hRHrgS+BlzLTY4VLKuzb2vYCFUspLOo6bOCXpqpRyrRCiLfAWZn3PsVLKWBv7wkBTID8QD5wEZkgp7zk7lhdeePH0YPiTthDiC2AW5iW1dmtFADNVV80SQnSx+d4LWAz0BI4IIRpZbR5uY/sN8CswRggxAhgNZAS+FEL0t7FdYlOWAk0Tv9vY7rb6/K7mNxPwjZ3zmwBEap9/AbIAI7W6iXZOeSiwSwixRQjxoRAiuaUIJwL1gI+FEFOBFsAuoBwwzibmXsCfQDpte1rMnfdOIUTlZI6RaiGEyGmQ3yAj/LoLQogsQohvhRAnhBARQohbQojjWl1WBT8rbb5nFkKMEEJM1R4QrLf9YfM9lxBijBDidyFEkBBikBDisBBijhAi9xOd4H8RKcAqOgn426lPA5xS9HXR5vthIED7XBAzDfVj7fsBO7a+QAbgHpBZq08PHLKx3Q9Mw6yJWUn7e037XMnG9oDV5z1ADu1zRuCwje1x62PYbPvXzvkewPzDWhMYD9wEVgGdgEw2toe0v37AdcBX+y7snN9hq+0ZgI3a5+ds86bVZwG+BU4AEcAtzE/w3wJZFa7fSpvvmYERwFSgrc22P2y+58K8QP7vQBAwSDuPOUBuG9tAmxIEnAeyAYE2trVtznM8cAiYAQTb2H4LZNc+vwqcBU4DF2zbhVU7+hoooiM3rwIbtHaXH1gD3NXa1Es2tgHAEOCoZnMT2Al0tuP3H+ALIJdNLr8AVtvYvuygvAJcs7Gdr+WjMWbCyXwgrYO2vQrzg9WXWm6/0M6xJ7BYpQ/wlhSgsWs3egE79QWAUDv1hxyUw0C0je1Rm+8BWgP5CZtOkKSd6wGbbba2PkBv7cYpq9WddXB+B7XOIAgbaq6d48wFumifJwKvap+LAXvs+LZt/P5AQ2AmcNNm2xHMP4TZgPtonRPmp+njNraHrW6wbNZxYx7WsY0jVd34QAJwzqbEan/P2tjut/o8Dvif1jZ7A4ts82b1eQNQzur6PUbL1o73A3AR83+YvYE8DtrRbsxLgLYBLgHNtfpqwA4b28VAZyAf0AcYABQFJmMeZrO2fewec7QN8zDZeu3cbIvJyT3TH9iG+T6wvXbW957tg9e/juLzFgfXzfADmMeNTwMrMU+oH6vdgKexesqxsr8OlNVuHOtSEPN4rbWtbuFhzEMFGbTPPlb1WWwbmdW2fJg72tG2jc3K5jzmJ65z2t/cWn2AnYadBZgEnNHiidX22QSUseP7QDJ5zWDzvbfm6wLQC1gH/I25g/7GxvZjzB3f35h/VBN/SHIAm+0cK1Xd+MCnWhsrZVV3zkH8+5PxY/v9OOCnfd5ps+2wE99vA39g1lzdgM2CSU7O74DN94M23/cktmvM72ist60G+mL1XwMQjPlHb62N7RGgqIM8XbKTCx+bus6Yn/4vOIoX+J+zvHlL8iVlDmJuTG8AzbTyBtq/53ZsxwMVHGybYfM9H1ZPfzbbytt8T+vALrv1ze3Aph42TzA6zjkDUMjBtsxAGcxPn8HJ+CimeMw8aE9yQFbMq5S95sC2pLa9uA6/qe7G59EP7k+Y3zE4+k/pMuan1U8x/+gJq222w0o9tVxUxTw88wvmIbPBwFQ7vh97GMA8RFcbmGhTvwPzMFgLzD+8jbX6Sjz+H9z2xHsE839e1osa2f6IZsP83uQEcBvz8NZxrc52qKg5EOIgT41tvn8HVLdjVxubYU/MQzkBdmyfB+aptHFvSaFO21tSd7G58SNsbvxsNrYedeNrndpOIMzB9m9sSuI7iVzAFDv2lYHZmN83HMZMce6O9gRuYztLIcdlMA9DrQSKaz8IdzD/gL1lY1sa83DKbWAr2o875v+UetnxXRyobps/7P+nWxzzkMyT2NZ5Er/e4qStPO0AvCV1F7ShFU+2xfyy+UVPiTcl48A8VBYKLMI8lNfIapvtEJSKbU8jbL1FxzV+2gF4S+ouOBjr99p6Rhyoz7B6qrbe4rx4l2b1wimEEIccbcI8tu21tbH1oDh8pEY6k1Ke1+bhzxNCFOBxOXJPsPXCCbydthd6EAzUwjyGag2B+aWY1/ZxW0+J47oQoqyU8l8AKeUDIUR9zESvUh5o64UTeDttL/RgGeZ/b/+13SCE2Oi1tWvrKXF0BOKsK6SUcUBHIcRfHmjrhRN419P2wgsvvEhF8K7y54UXXniRiuDttL3wwgsvUhG8nbYXXnjhRSqCt9P2wgsvvEhF8HbaXnjhhRepCP8HAwkTTMRttxMAAAAASUVORK5CYII=\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\033[1m' +'Classification report : '+ '\\033[0m\\n', classification_report(y_test, y_pred5))\n",
    "\n",
    "cm = confusion_matrix(y_pred5, y_test)\n",
    "print('\\033[1m' +'Confusion Matrix : '+ '\\033[0m')\n",
    "sns.heatmap(cm, cmap = 'OrRd',annot = True, fmt='d')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1e516628",
   "metadata": {},
   "source": [
    "# Evaluation -- ExtraTreesClassifier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "dfbde802",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 0.42975403332451734\n",
      "MSE: 4.931578947368421\n",
      "RMSE: 2.2207158637179187\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "\n",
    "print('MAE:', metrics.mean_absolute_error(y_test,y_pred5))\n",
    "print('MSE:', metrics.mean_squared_error(y_test, y_pred5))\n",
    "print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred5)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "a66f67fb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score :  0.9517164216322889\n",
      "Recall Score :  0.950515736577625\n",
      "f1_score :  0.9500656341507768\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score\n",
    "print(\"Precision Score : \",precision_score(y_test, y_pred5, average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import recall_score\n",
    "print(\"Recall Score : \",recall_score(y_test, y_pred5,average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import f1_score\n",
    "print(\"f1_score : \",f1_score(y_test, y_pred5,average='weighted'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5dc7f95e",
   "metadata": {},
   "source": [
    "# Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "763a6ba8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(criterion='entropy', n_estimators=400)"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "RandomForestClassifier = RandomForestClassifier(\n",
    "              bootstrap = True,\n",
    "              ccp_alpha = 0.0,\n",
    "              class_weight =  None,\n",
    "              criterion = 'entropy',\n",
    "              max_depth = None,\n",
    "              max_features = 'auto' ,\n",
    "              max_leaf_nodes = None,\n",
    "              max_samples = None,\n",
    "              min_impurity_decrease = 0.0,\n",
    "              min_samples_leaf = 1,\n",
    "              min_samples_split = 2,\n",
    "              min_weight_fraction_leaf = 0.0,\n",
    "              n_estimators = 400,\n",
    "              n_jobs = None,\n",
    "              oob_score = False,\n",
    "              random_state = None,\n",
    "              verbose = 0,\n",
    "              warm_start = False)\n",
    "RandomForestClassifier.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "24817338",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred3 = RandomForestClassifier.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "37089ca4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 94.28193599576832\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy = {accuracy_score(y_test, y_pred3)}\n",
    "print(f\"Accuracy is: {accuracy_score(y_test, y_pred3)* 100}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "5358b685",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mClassification report : \u001b[0m\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.93      0.99      0.96     35440\n",
      "           1       0.97      0.95      0.96      2416\n",
      "           2       0.97      0.91      0.94      2012\n",
      "           3       0.97      0.93      0.95      2302\n",
      "           4       0.98      0.92      0.95      2120\n",
      "           5       0.97      0.90      0.93      2055\n",
      "           6       0.98      0.93      0.96      2214\n",
      "           7       0.92      0.89      0.91      2326\n",
      "           8       0.96      0.88      0.91      2403\n",
      "           9       0.97      0.87      0.92      2255\n",
      "          10       0.96      0.85      0.90      2516\n",
      "          11       0.96      0.88      0.92      2458\n",
      "          12       0.94      0.88      0.91      2411\n",
      "          13       0.95      0.90      0.92      1404\n",
      "          14       0.89      0.81      0.84      1637\n",
      "          15       0.92      0.87      0.89      1448\n",
      "          16       0.96      0.91      0.94      1536\n",
      "          17       0.97      0.93      0.95      1645\n",
      "          18       0.95      0.91      0.93       881\n",
      "          19       0.95      0.89      0.92       801\n",
      "          20       0.97      0.95      0.96       855\n",
      "          21       0.98      0.95      0.97       810\n",
      "          22       0.98      0.95      0.96       762\n",
      "          23       0.98      0.97      0.97       913\n",
      "\n",
      "    accuracy                           0.94     75620\n",
      "   macro avg       0.96      0.91      0.93     75620\n",
      "weighted avg       0.94      0.94      0.94     75620\n",
      "\n",
      "\u001b[1mConfusion Matrix : \u001b[0m\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\033[1m' +'Classification report : '+ '\\033[0m\\n', classification_report(y_test, y_pred3))\n",
    "\n",
    "cm = confusion_matrix(y_pred3, y_test)\n",
    "print('\\033[1m' +'Confusion Matrix : '+ '\\033[0m')\n",
    "sns.heatmap(cm, cmap = 'OrRd',annot = True, fmt='d')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "75f7fe8b",
   "metadata": {},
   "source": [
    "# Evaluation -- Random Forest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "29a1cece",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 0.48694789738164507\n",
      "MSE: 5.56991536630521\n",
      "RMSE: 2.3600668139493868\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "\n",
    "print('MAE:', metrics.mean_absolute_error(y_test,y_pred3))\n",
    "print('MSE:', metrics.mean_squared_error(y_test, y_pred3))\n",
    "print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred3)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ebada233",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score :  0.9437356154484401\n",
      "Recall Score :  0.9428193599576832\n",
      "f1_score :  0.9422035561161977\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score\n",
    "print(\"Precision Score : \",precision_score(y_test, y_pred3, average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import recall_score\n",
    "print(\"Recall Score : \",recall_score(y_test, y_pred3,average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import f1_score\n",
    "print(\"f1_score : \",f1_score(y_test, y_pred3,average='weighted'))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c3cac0b4",
   "metadata": {},
   "source": [
    "# XGBoost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "d28fa486",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "E:\\MachineLearning\\envs\\gpu\\lib\\site-packages\\xgboost\\compat.py:36: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n",
      "  from pandas import MultiIndex, Int64Index\n",
      "E:\\MachineLearning\\envs\\gpu\\lib\\site-packages\\xgboost\\sklearn.py:1224: UserWarning: The use of label encoder in XGBClassifier is deprecated and will be removed in a future release. To remove this warning, do the following: 1) Pass option use_label_encoder=False when constructing XGBClassifier object; and 2) Encode your labels (y) as integers starting with 0, i.e. 0, 1, 2, ..., [num_class - 1].\n",
      "  warnings.warn(label_encoder_deprecation_msg, UserWarning)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12:43:23] WARNING: C:/Users/Administrator/workspace/xgboost-win64_release_1.5.1/src/learner.cc:1115: Starting in XGBoost 1.3.0, the default evaluation metric used with the objective 'multi:softprob' was changed from 'merror' to 'mlogloss'. Explicitly set eval_metric if you'd like to restore the old behavior.\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,\n",
       "              colsample_bynode=1, colsample_bytree=1, enable_categorical=False,\n",
       "              gamma=0, gpu_id=0, importance_type=None, importance_typen=None,\n",
       "              interaction_constraints='', learning_rate=0.5, max_delta_step=0,\n",
       "              max_depth=50, min_child_weight=1, missing=nan,\n",
       "              monotone_constraints='()', n_estimators=400, n_jobs=12,\n",
       "              num_parallel_tree=1, objective='multi:softprob',\n",
       "              predictor='gpu_predictor', random_state=0, reg_alpha=0,\n",
       "              reg_lambda=1, scale_pos_weight=None, subsample=1,\n",
       "              tree_method='exact', validate_parameters=1, verbosity=None)"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from xgboost import XGBClassifier\n",
    "xgb = XGBClassifier(base_score = None,\n",
    "              booster = 'gbtree',\n",
    "              colsample_bylevel = None,\n",
    "              colsample_bynode = None,\n",
    "              colsample_bytree = None,\n",
    "              enable_categorical = False,\n",
    "              gamma = 0,\n",
    "              gpu_id = None,\n",
    "              importance_typen = None,\n",
    "              interaction_constraints = None,\n",
    "              learning_rate = 0.5,\n",
    "              max_delta_step = None,\n",
    "              max_depth = 50,\n",
    "              min_child_weight = 1,\n",
    "              monotone_constraints = None,\n",
    "              n_estimators = 400,\n",
    "              n_jobs = None,\n",
    "              num_parallel_tree = None,\n",
    "              objective = 'multi:softmax',\n",
    "              predictor = 'gpu_predictor',\n",
    "              random_state = None,\n",
    "              reg_alpha = None,\n",
    "              reg_lambda = None,\n",
    "              scale_pos_weight = None,\n",
    "              subsample = None,\n",
    "              tree_method = None,\n",
    "              use_label_encoder = True,\n",
    "              validate_parameters = None,\n",
    "              verbosity = None)\n",
    "xgb.fit(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "7b89e617",
   "metadata": {},
   "outputs": [],
   "source": [
    "y_pred4 = xgb.predict(X_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "336cd24a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is: 93.43295424490876\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import accuracy_score\n",
    "accuracy = {accuracy_score(y_test, y_pred4)}\n",
    "print(f\"Accuracy is: {accuracy_score(y_test, y_pred4)* 100}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "2092f3be",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mClassification report : \u001b[0m\n",
      "               precision    recall  f1-score   support\n",
      "\n",
      "           0       0.94      0.98      0.96     35440\n",
      "           1       0.95      0.94      0.94      2416\n",
      "           2       0.96      0.90      0.93      2012\n",
      "           3       0.94      0.92      0.93      2302\n",
      "           4       0.96      0.91      0.94      2120\n",
      "           5       0.95      0.89      0.92      2055\n",
      "           6       0.95      0.92      0.94      2214\n",
      "           7       0.90      0.88      0.89      2326\n",
      "           8       0.93      0.87      0.90      2403\n",
      "           9       0.92      0.86      0.89      2255\n",
      "          10       0.93      0.85      0.89      2516\n",
      "          11       0.93      0.88      0.91      2458\n",
      "          12       0.90      0.87      0.89      2411\n",
      "          13       0.92      0.89      0.91      1404\n",
      "          14       0.85      0.79      0.82      1637\n",
      "          15       0.88      0.85      0.86      1448\n",
      "          16       0.93      0.89      0.91      1536\n",
      "          17       0.94      0.92      0.93      1645\n",
      "          18       0.91      0.87      0.89       881\n",
      "          19       0.93      0.88      0.90       801\n",
      "          20       0.95      0.96      0.96       855\n",
      "          21       0.97      0.94      0.96       810\n",
      "          22       0.97      0.94      0.96       762\n",
      "          23       0.97      0.96      0.97       913\n",
      "\n",
      "    accuracy                           0.93     75620\n",
      "   macro avg       0.93      0.90      0.92     75620\n",
      "weighted avg       0.93      0.93      0.93     75620\n",
      "\n",
      "\u001b[1mConfusion Matrix : \u001b[0m\n"
     ]
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "print('\\033[1m' +'Classification report : '+ '\\033[0m\\n', classification_report(y_test, y_pred4))\n",
    "\n",
    "cm = confusion_matrix(y_pred4, y_test)\n",
    "print('\\033[1m' +'Confusion Matrix : '+ '\\033[0m')\n",
    "sns.heatmap(cm, cmap = 'OrRd',annot = True, fmt='d')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4c8e2e10",
   "metadata": {},
   "source": [
    "# Evaluation -- XGBoost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "5eef5c67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAE: 0.5302697699021423\n",
      "MSE: 5.939553028299391\n",
      "RMSE: 2.437119822310629\n"
     ]
    }
   ],
   "source": [
    "from sklearn import metrics\n",
    "\n",
    "print('MAE:', metrics.mean_absolute_error(y_test,y_pred4))\n",
    "print('MSE:', metrics.mean_squared_error(y_test, y_pred4))\n",
    "print('RMSE:', np.sqrt(metrics.mean_squared_error(y_test, y_pred4)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "22aae28f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Precision Score :  0.9341213108000229\n",
      "Recall Score :  0.9343295424490875\n",
      "f1_score :  0.9336481678920123\n"
     ]
    }
   ],
   "source": [
    "from sklearn.metrics import precision_score\n",
    "print(\"Precision Score : \",precision_score(y_test, y_pred4, average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import recall_score\n",
    "print(\"Recall Score : \",recall_score(y_test, y_pred4,average='weighted'))\n",
    "\n",
    "\n",
    "from sklearn.metrics import f1_score\n",
    "print(\"f1_score : \",f1_score(y_test, y_pred4,average='weighted'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e052c75",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b3f42aaa",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
